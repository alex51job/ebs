#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ebs.dbml
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ebs")]
	public partial class ebsDBData : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InserttbUsers(tbUsers instance);
    partial void UpdatetbUsers(tbUsers instance);
    partial void DeletetbUsers(tbUsers instance);
    partial void InserttbSysRole(tbSysRole instance);
    partial void UpdatetbSysRole(tbSysRole instance);
    partial void DeletetbSysRole(tbSysRole instance);
    partial void InserttbSysVenue(tbSysVenue instance);
    partial void UpdatetbSysVenue(tbSysVenue instance);
    partial void DeletetbSysVenue(tbSysVenue instance);
    partial void InserttbSysMenu(tbSysMenu instance);
    partial void UpdatetbSysMenu(tbSysMenu instance);
    partial void DeletetbSysMenu(tbSysMenu instance);
    partial void InserttbSysMendian(tbSysMendian instance);
    partial void UpdatetbSysMendian(tbSysMendian instance);
    partial void DeletetbSysMendian(tbSysMendian instance);
    partial void InserttbSysYishiChangdi(tbSysYishiChangdi instance);
    partial void UpdatetbSysYishiChangdi(tbSysYishiChangdi instance);
    partial void DeletetbSysYishiChangdi(tbSysYishiChangdi instance);
    partial void InserttbSysHunqinMenu(tbSysHunqinMenu instance);
    partial void UpdatetbSysHunqinMenu(tbSysHunqinMenu instance);
    partial void DeletetbSysHunqinMenu(tbSysHunqinMenu instance);
    partial void InserttbSysServicesHY(tbSysServicesHY instance);
    partial void UpdatetbSysServicesHY(tbSysServicesHY instance);
    partial void DeletetbSysServicesHY(tbSysServicesHY instance);
    partial void InserttbSysServicesHQ(tbSysServicesHQ instance);
    partial void UpdatetbSysServicesHQ(tbSysServicesHQ instance);
    partial void DeletetbSysServicesHQ(tbSysServicesHQ instance);
    partial void InsertAuditRecords(AuditRecords instance);
    partial void UpdateAuditRecords(AuditRecords instance);
    partial void DeleteAuditRecords(AuditRecords instance);
    partial void InserttbSysAuditConfig(tbSysAuditConfig instance);
    partial void UpdatetbSysAuditConfig(tbSysAuditConfig instance);
    partial void DeletetbSysAuditConfig(tbSysAuditConfig instance);
    partial void InsertWeddingExtraPayContent(WeddingExtraPayContent instance);
    partial void UpdateWeddingExtraPayContent(WeddingExtraPayContent instance);
    partial void DeleteWeddingExtraPayContent(WeddingExtraPayContent instance);
    partial void InsertWeddingOrdersLogs(WeddingOrdersLogs instance);
    partial void UpdateWeddingOrdersLogs(WeddingOrdersLogs instance);
    partial void DeleteWeddingOrdersLogs(WeddingOrdersLogs instance);
    partial void InserttbWeddingOrdersRevision(tbWeddingOrdersRevision instance);
    partial void UpdatetbWeddingOrdersRevision(tbWeddingOrdersRevision instance);
    partial void DeletetbWeddingOrdersRevision(tbWeddingOrdersRevision instance);
    partial void InserttbSysAuditModifyConfig(tbSysAuditModifyConfig instance);
    partial void UpdatetbSysAuditModifyConfig(tbSysAuditModifyConfig instance);
    partial void DeletetbSysAuditModifyConfig(tbSysAuditModifyConfig instance);
    partial void InserttbSysStandardWeddingDateLevel(tbSysStandardWeddingDateLevel instance);
    partial void UpdatetbSysStandardWeddingDateLevel(tbSysStandardWeddingDateLevel instance);
    partial void DeletetbSysStandardWeddingDateLevel(tbSysStandardWeddingDateLevel instance);
    partial void InserttbSysStandardWeddingPrice(tbSysStandardWeddingPrice instance);
    partial void UpdatetbSysStandardWeddingPrice(tbSysStandardWeddingPrice instance);
    partial void DeletetbSysStandardWeddingPrice(tbSysStandardWeddingPrice instance);
    partial void InserttbSysEventType(tbSysEventType instance);
    partial void UpdatetbSysEventType(tbSysEventType instance);
    partial void DeletetbSysEventType(tbSysEventType instance);
    partial void InserttbSysQudao(tbSysQudao instance);
    partial void UpdatetbSysQudao(tbSysQudao instance);
    partial void DeletetbSysQudao(tbSysQudao instance);
    partial void InsertCustomers(Customers instance);
    partial void UpdateCustomers(Customers instance);
    partial void DeleteCustomers(Customers instance);
    partial void InsertCustomerFollowBySales(CustomerFollowBySales instance);
    partial void UpdateCustomerFollowBySales(CustomerFollowBySales instance);
    partial void DeleteCustomerFollowBySales(CustomerFollowBySales instance);
    partial void InsertCustomerFollowBySales_Bussiness(CustomerFollowBySales_Bussiness instance);
    partial void UpdateCustomerFollowBySales_Bussiness(CustomerFollowBySales_Bussiness instance);
    partial void DeleteCustomerFollowBySales_Bussiness(CustomerFollowBySales_Bussiness instance);
    partial void InsertCustomerRecords(CustomerRecords instance);
    partial void UpdateCustomerRecords(CustomerRecords instance);
    partial void DeleteCustomerRecords(CustomerRecords instance);
    partial void InsertCustomerFollowByKefu(CustomerFollowByKefu instance);
    partial void UpdateCustomerFollowByKefu(CustomerFollowByKefu instance);
    partial void DeleteCustomerFollowByKefu(CustomerFollowByKefu instance);
    partial void InsertBussinessEventFormat(BussinessEventFormat instance);
    partial void UpdateBussinessEventFormat(BussinessEventFormat instance);
    partial void DeleteBussinessEventFormat(BussinessEventFormat instance);
    partial void InserttbSysYongcan(tbSysYongcan instance);
    partial void UpdatetbSysYongcan(tbSysYongcan instance);
    partial void DeletetbSysYongcan(tbSysYongcan instance);
    partial void InserttbSysAuditConfig_Bussiness(tbSysAuditConfig_Bussiness instance);
    partial void UpdatetbSysAuditConfig_Bussiness(tbSysAuditConfig_Bussiness instance);
    partial void DeletetbSysAuditConfig_Bussiness(tbSysAuditConfig_Bussiness instance);
    partial void InsertBussinessAuditRecords(BussinessAuditRecords instance);
    partial void UpdateBussinessAuditRecords(BussinessAuditRecords instance);
    partial void DeleteBussinessAuditRecords(BussinessAuditRecords instance);
    partial void InsertBussinessAuditRevision(BussinessAuditRevision instance);
    partial void UpdateBussinessAuditRevision(BussinessAuditRevision instance);
    partial void DeleteBussinessAuditRevision(BussinessAuditRevision instance);
    partial void InserttbRili(tbRili instance);
    partial void UpdatetbRili(tbRili instance);
    partial void DeletetbRili(tbRili instance);
    partial void InsertBussinessOrderLogs(BussinessOrderLogs instance);
    partial void UpdateBussinessOrderLogs(BussinessOrderLogs instance);
    partial void DeleteBussinessOrderLogs(BussinessOrderLogs instance);
    partial void InsertBussinessPayment(BussinessPayment instance);
    partial void UpdateBussinessPayment(BussinessPayment instance);
    partial void DeleteBussinessPayment(BussinessPayment instance);
    partial void InsertBussiness(Bussiness instance);
    partial void UpdateBussiness(Bussiness instance);
    partial void DeleteBussiness(Bussiness instance);
    partial void InsertBussinessAdditionalForSW(BussinessAdditionalForSW instance);
    partial void UpdateBussinessAdditionalForSW(BussinessAdditionalForSW instance);
    partial void DeleteBussinessAdditionalForSW(BussinessAdditionalForSW instance);
    partial void InsertBussinessFiles(BussinessFiles instance);
    partial void UpdateBussinessFiles(BussinessFiles instance);
    partial void DeleteBussinessFiles(BussinessFiles instance);
    partial void InsertWeddingFiles(WeddingFiles instance);
    partial void UpdateWeddingFiles(WeddingFiles instance);
    partial void DeleteWeddingFiles(WeddingFiles instance);
    partial void InsertWeddingOrders(WeddingOrders instance);
    partial void UpdateWeddingOrders(WeddingOrders instance);
    partial void DeleteWeddingOrders(WeddingOrders instance);
    partial void InsertWeddingPayment(WeddingPayment instance);
    partial void UpdateWeddingPayment(WeddingPayment instance);
    partial void DeleteWeddingPayment(WeddingPayment instance);
    #endregion
		
		public ebsDBData() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ebsConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ebsDBData(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ebsDBData(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ebsDBData(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ebsDBData(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbUsers> tbUsers
		{
			get
			{
				return this.GetTable<tbUsers>();
			}
		}
		
		public System.Data.Linq.Table<tbSysRole> tbSysRole
		{
			get
			{
				return this.GetTable<tbSysRole>();
			}
		}
		
		public System.Data.Linq.Table<tbSysVenue> tbSysVenue
		{
			get
			{
				return this.GetTable<tbSysVenue>();
			}
		}
		
		public System.Data.Linq.Table<tbSysMenu> tbSysMenu
		{
			get
			{
				return this.GetTable<tbSysMenu>();
			}
		}
		
		public System.Data.Linq.Table<tbSysMendian> tbSysMendian
		{
			get
			{
				return this.GetTable<tbSysMendian>();
			}
		}
		
		public System.Data.Linq.Table<tbSysYishiChangdi> tbSysYishiChangdi
		{
			get
			{
				return this.GetTable<tbSysYishiChangdi>();
			}
		}
		
		public System.Data.Linq.Table<tbSysHunqinMenu> tbSysHunqinMenu
		{
			get
			{
				return this.GetTable<tbSysHunqinMenu>();
			}
		}
		
		public System.Data.Linq.Table<tbSysServicesHY> tbSysServicesHY
		{
			get
			{
				return this.GetTable<tbSysServicesHY>();
			}
		}
		
		public System.Data.Linq.Table<tbSysServicesHQ> tbSysServicesHQ
		{
			get
			{
				return this.GetTable<tbSysServicesHQ>();
			}
		}
		
		public System.Data.Linq.Table<AuditRecords> AuditRecords
		{
			get
			{
				return this.GetTable<AuditRecords>();
			}
		}
		
		public System.Data.Linq.Table<tbSysAuditConfig> tbSysAuditConfig
		{
			get
			{
				return this.GetTable<tbSysAuditConfig>();
			}
		}
		
		public System.Data.Linq.Table<WeddingExtraPayContent> WeddingExtraPayContent
		{
			get
			{
				return this.GetTable<WeddingExtraPayContent>();
			}
		}
		
		public System.Data.Linq.Table<WeddingOrdersLogs> WeddingOrdersLogs
		{
			get
			{
				return this.GetTable<WeddingOrdersLogs>();
			}
		}
		
		public System.Data.Linq.Table<tbWeddingOrdersRevision> tbWeddingOrdersRevision
		{
			get
			{
				return this.GetTable<tbWeddingOrdersRevision>();
			}
		}
		
		public System.Data.Linq.Table<tbSysAuditModifyConfig> tbSysAuditModifyConfig
		{
			get
			{
				return this.GetTable<tbSysAuditModifyConfig>();
			}
		}
		
		public System.Data.Linq.Table<tbSysStandardWeddingDateLevel> tbSysStandardWeddingDateLevel
		{
			get
			{
				return this.GetTable<tbSysStandardWeddingDateLevel>();
			}
		}
		
		public System.Data.Linq.Table<tbSysStandardWeddingPrice> tbSysStandardWeddingPrice
		{
			get
			{
				return this.GetTable<tbSysStandardWeddingPrice>();
			}
		}
		
		public System.Data.Linq.Table<tbSysEventType> tbSysEventType
		{
			get
			{
				return this.GetTable<tbSysEventType>();
			}
		}
		
		public System.Data.Linq.Table<tbSysQudao> tbSysQudao
		{
			get
			{
				return this.GetTable<tbSysQudao>();
			}
		}
		
		public System.Data.Linq.Table<Customers> Customers
		{
			get
			{
				return this.GetTable<Customers>();
			}
		}
		
		public System.Data.Linq.Table<CustomerFollowBySales> CustomerFollowBySales
		{
			get
			{
				return this.GetTable<CustomerFollowBySales>();
			}
		}
		
		public System.Data.Linq.Table<CustomerFollowBySales_Bussiness> CustomerFollowBySales_Bussiness
		{
			get
			{
				return this.GetTable<CustomerFollowBySales_Bussiness>();
			}
		}
		
		public System.Data.Linq.Table<CustomerRecords> CustomerRecords
		{
			get
			{
				return this.GetTable<CustomerRecords>();
			}
		}
		
		public System.Data.Linq.Table<CustomerFollowByKefu> CustomerFollowByKefu
		{
			get
			{
				return this.GetTable<CustomerFollowByKefu>();
			}
		}
		
		public System.Data.Linq.Table<BussinessEventFormat> BussinessEventFormat
		{
			get
			{
				return this.GetTable<BussinessEventFormat>();
			}
		}
		
		public System.Data.Linq.Table<tbSysYongcan> tbSysYongcan
		{
			get
			{
				return this.GetTable<tbSysYongcan>();
			}
		}
		
		public System.Data.Linq.Table<tbSysAuditConfig_Bussiness> tbSysAuditConfig_Bussiness
		{
			get
			{
				return this.GetTable<tbSysAuditConfig_Bussiness>();
			}
		}
		
		public System.Data.Linq.Table<BussinessAuditRecords> BussinessAuditRecords
		{
			get
			{
				return this.GetTable<BussinessAuditRecords>();
			}
		}
		
		public System.Data.Linq.Table<BussinessAuditRevision> BussinessAuditRevision
		{
			get
			{
				return this.GetTable<BussinessAuditRevision>();
			}
		}
		
		public System.Data.Linq.Table<tbRili> tbRili
		{
			get
			{
				return this.GetTable<tbRili>();
			}
		}
		
		public System.Data.Linq.Table<BussinessOrderLogs> BussinessOrderLogs
		{
			get
			{
				return this.GetTable<BussinessOrderLogs>();
			}
		}
		
		public System.Data.Linq.Table<BussinessPayment> BussinessPayment
		{
			get
			{
				return this.GetTable<BussinessPayment>();
			}
		}
		
		public System.Data.Linq.Table<Bussiness> Bussiness
		{
			get
			{
				return this.GetTable<Bussiness>();
			}
		}
		
		public System.Data.Linq.Table<BussinessAdditionalForSW> BussinessAdditionalForSW
		{
			get
			{
				return this.GetTable<BussinessAdditionalForSW>();
			}
		}
		
		public System.Data.Linq.Table<BussinessFiles> BussinessFiles
		{
			get
			{
				return this.GetTable<BussinessFiles>();
			}
		}
		
		public System.Data.Linq.Table<WeddingFiles> WeddingFiles
		{
			get
			{
				return this.GetTable<WeddingFiles>();
			}
		}
		
		public System.Data.Linq.Table<WeddingOrders> WeddingOrders
		{
			get
			{
				return this.GetTable<WeddingOrders>();
			}
		}
		
		public System.Data.Linq.Table<WeddingPayment> WeddingPayment
		{
			get
			{
				return this.GetTable<WeddingPayment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbUsers")]
	public partial class tbUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _DisplayName;
		
		private string _UserMail;
		
		private string _Mobile;
		
		private System.DateTime _CreationDate;
		
		private int _LoginCount;
		
		private string _Role;
		
		private bool _Sys;
		
		private string _password;
		
		private string _Region;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUserMailChanging(string value);
    partial void OnUserMailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnLoginCountChanging(int value);
    partial void OnLoginCountChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnSysChanging(bool value);
    partial void OnSysChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    #endregion
		
		public tbUsers()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMail", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserMail
		{
			get
			{
				return this._UserMail;
			}
			set
			{
				if ((this._UserMail != value))
				{
					this.OnUserMailChanging(value);
					this.SendPropertyChanging();
					this._UserMail = value;
					this.SendPropertyChanged("UserMail");
					this.OnUserMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginCount", DbType="Int NOT NULL")]
		public int LoginCount
		{
			get
			{
				return this._LoginCount;
			}
			set
			{
				if ((this._LoginCount != value))
				{
					this.OnLoginCountChanging(value);
					this.SendPropertyChanging();
					this._LoginCount = value;
					this.SendPropertyChanged("LoginCount");
					this.OnLoginCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sys", DbType="Bit NOT NULL")]
		public bool Sys
		{
			get
			{
				return this._Sys;
			}
			set
			{
				if ((this._Sys != value))
				{
					this.OnSysChanging(value);
					this.SendPropertyChanging();
					this._Sys = value;
					this.SendPropertyChanged("Sys");
					this.OnSysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysRole")]
	public partial class tbSysRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Role;
		
		private System.DateTime _CreationDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public tbSysRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysVenue")]
	public partial class tbSysVenue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _VenueName;
		
		private System.DateTime _CreationDate;
		
		private string _Region;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVenueNameChanging(string value);
    partial void OnVenueNameChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    #endregion
		
		public tbSysVenue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string VenueName
		{
			get
			{
				return this._VenueName;
			}
			set
			{
				if ((this._VenueName != value))
				{
					this.OnVenueNameChanging(value);
					this.SendPropertyChanging();
					this._VenueName = value;
					this.SendPropertyChanged("VenueName");
					this.OnVenueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysMenu")]
	public partial class tbSysMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MenuName;
		
		private double _MenuPrice;
		
		private System.DateTime _CreationDate;
		
		private string _MenuDesc;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuPriceChanging(double value);
    partial void OnMenuPriceChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnMenuDescChanging(string value);
    partial void OnMenuDescChanged();
    #endregion
		
		public tbSysMenu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuPrice", DbType="Float NOT NULL")]
		public double MenuPrice
		{
			get
			{
				return this._MenuPrice;
			}
			set
			{
				if ((this._MenuPrice != value))
				{
					this.OnMenuPriceChanging(value);
					this.SendPropertyChanging();
					this._MenuPrice = value;
					this.SendPropertyChanged("MenuPrice");
					this.OnMenuPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuDesc", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MenuDesc
		{
			get
			{
				return this._MenuDesc;
			}
			set
			{
				if ((this._MenuDesc != value))
				{
					this.OnMenuDescChanging(value);
					this.SendPropertyChanging();
					this._MenuDesc = value;
					this.SendPropertyChanged("MenuDesc");
					this.OnMenuDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysMendian")]
	public partial class tbSysMendian : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Mendian;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMendianChanging(string value);
    partial void OnMendianChanged();
    #endregion
		
		public tbSysMendian()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mendian", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Mendian
		{
			get
			{
				return this._Mendian;
			}
			set
			{
				if ((this._Mendian != value))
				{
					this.OnMendianChanging(value);
					this.SendPropertyChanging();
					this._Mendian = value;
					this.SendPropertyChanged("Mendian");
					this.OnMendianChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysYishiChangdi")]
	public partial class tbSysYishiChangdi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _YishiChangdi;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnYishiChangdiChanging(string value);
    partial void OnYishiChangdiChanged();
    #endregion
		
		public tbSysYishiChangdi()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YishiChangdi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string YishiChangdi
		{
			get
			{
				return this._YishiChangdi;
			}
			set
			{
				if ((this._YishiChangdi != value))
				{
					this.OnYishiChangdiChanging(value);
					this.SendPropertyChanging();
					this._YishiChangdi = value;
					this.SendPropertyChanged("YishiChangdi");
					this.OnYishiChangdiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysHunqinMenu")]
	public partial class tbSysHunqinMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _HunQinMenuName;
		
		private string _HunQinMenuPrice;
		
		private System.DateTime _CreationDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHunQinMenuNameChanging(string value);
    partial void OnHunQinMenuNameChanged();
    partial void OnHunQinMenuPriceChanging(string value);
    partial void OnHunQinMenuPriceChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public tbSysHunqinMenu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HunQinMenuName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HunQinMenuName
		{
			get
			{
				return this._HunQinMenuName;
			}
			set
			{
				if ((this._HunQinMenuName != value))
				{
					this.OnHunQinMenuNameChanging(value);
					this.SendPropertyChanging();
					this._HunQinMenuName = value;
					this.SendPropertyChanged("HunQinMenuName");
					this.OnHunQinMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HunQinMenuPrice", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HunQinMenuPrice
		{
			get
			{
				return this._HunQinMenuPrice;
			}
			set
			{
				if ((this._HunQinMenuPrice != value))
				{
					this.OnHunQinMenuPriceChanging(value);
					this.SendPropertyChanging();
					this._HunQinMenuPrice = value;
					this.SendPropertyChanged("HunQinMenuPrice");
					this.OnHunQinMenuPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysServicesHY")]
	public partial class tbSysServicesHY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceName;
		
		private System.DateTime _CreationDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public tbSysServicesHY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysServicesHQ")]
	public partial class tbSysServicesHQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceName;
		
		private System.DateTime _CreationDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public tbSysServicesHQ()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditRecords")]
	public partial class AuditRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrderID;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _AuditUser;
		
		private string _AuditLevel;
		
		private string _AuditType;
		
		private string _AuditResult;
		
		private string _AuditSuggest;
		
		private int _AuditPriority;
		
		private EntityRef<WeddingOrders> _WeddingOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnAuditUserChanging(string value);
    partial void OnAuditUserChanged();
    partial void OnAuditLevelChanging(string value);
    partial void OnAuditLevelChanged();
    partial void OnAuditTypeChanging(string value);
    partial void OnAuditTypeChanged();
    partial void OnAuditResultChanging(string value);
    partial void OnAuditResultChanged();
    partial void OnAuditSuggestChanging(string value);
    partial void OnAuditSuggestChanged();
    partial void OnAuditPriorityChanging(int value);
    partial void OnAuditPriorityChanged();
    #endregion
		
		public AuditRecords()
		{
			this._WeddingOrders = default(EntityRef<WeddingOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._WeddingOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="Date")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditUser", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditUser
		{
			get
			{
				return this._AuditUser;
			}
			set
			{
				if ((this._AuditUser != value))
				{
					this.OnAuditUserChanging(value);
					this.SendPropertyChanging();
					this._AuditUser = value;
					this.SendPropertyChanged("AuditUser");
					this.OnAuditUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditLevel", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditLevel
		{
			get
			{
				return this._AuditLevel;
			}
			set
			{
				if ((this._AuditLevel != value))
				{
					this.OnAuditLevelChanging(value);
					this.SendPropertyChanging();
					this._AuditLevel = value;
					this.SendPropertyChanged("AuditLevel");
					this.OnAuditLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditType
		{
			get
			{
				return this._AuditType;
			}
			set
			{
				if ((this._AuditType != value))
				{
					this.OnAuditTypeChanging(value);
					this.SendPropertyChanging();
					this._AuditType = value;
					this.SendPropertyChanged("AuditType");
					this.OnAuditTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditResult", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditResult
		{
			get
			{
				return this._AuditResult;
			}
			set
			{
				if ((this._AuditResult != value))
				{
					this.OnAuditResultChanging(value);
					this.SendPropertyChanging();
					this._AuditResult = value;
					this.SendPropertyChanged("AuditResult");
					this.OnAuditResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditSuggest", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AuditSuggest
		{
			get
			{
				return this._AuditSuggest;
			}
			set
			{
				if ((this._AuditSuggest != value))
				{
					this.OnAuditSuggestChanging(value);
					this.SendPropertyChanging();
					this._AuditSuggest = value;
					this.SendPropertyChanged("AuditSuggest");
					this.OnAuditSuggestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditPriority", DbType="Int NOT NULL")]
		public int AuditPriority
		{
			get
			{
				return this._AuditPriority;
			}
			set
			{
				if ((this._AuditPriority != value))
				{
					this.OnAuditPriorityChanging(value);
					this.SendPropertyChanging();
					this._AuditPriority = value;
					this.SendPropertyChanged("AuditPriority");
					this.OnAuditPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeddingOrders_AuditRecords", Storage="_WeddingOrders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public WeddingOrders WeddingOrders
		{
			get
			{
				return this._WeddingOrders.Entity;
			}
			set
			{
				WeddingOrders previousValue = this._WeddingOrders.Entity;
				if (((previousValue != value) 
							|| (this._WeddingOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeddingOrders.Entity = null;
						previousValue.AuditRecords.Remove(this);
					}
					this._WeddingOrders.Entity = value;
					if ((value != null))
					{
						value.AuditRecords.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("WeddingOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysAuditConfig")]
	public partial class tbSysAuditConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NeedRole;
		
		private double _ConditionMin;
		
		private double _ConditionMax;
		
		private int _priority;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNeedRoleChanging(string value);
    partial void OnNeedRoleChanged();
    partial void OnConditionMinChanging(double value);
    partial void OnConditionMinChanged();
    partial void OnConditionMaxChanging(double value);
    partial void OnConditionMaxChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    #endregion
		
		public tbSysAuditConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedRole", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string NeedRole
		{
			get
			{
				return this._NeedRole;
			}
			set
			{
				if ((this._NeedRole != value))
				{
					this.OnNeedRoleChanging(value);
					this.SendPropertyChanging();
					this._NeedRole = value;
					this.SendPropertyChanged("NeedRole");
					this.OnNeedRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionMin", DbType="Float NOT NULL")]
		public double ConditionMin
		{
			get
			{
				return this._ConditionMin;
			}
			set
			{
				if ((this._ConditionMin != value))
				{
					this.OnConditionMinChanging(value);
					this.SendPropertyChanging();
					this._ConditionMin = value;
					this.SendPropertyChanged("ConditionMin");
					this.OnConditionMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionMax", DbType="Float NOT NULL")]
		public double ConditionMax
		{
			get
			{
				return this._ConditionMax;
			}
			set
			{
				if ((this._ConditionMax != value))
				{
					this.OnConditionMaxChanging(value);
					this.SendPropertyChanging();
					this._ConditionMax = value;
					this.SendPropertyChanged("ConditionMax");
					this.OnConditionMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeddingExtraPayContent")]
	public partial class WeddingExtraPayContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrderID;
		
		private double _Caijin;
		
		private double _CaijinZhuoshu;
		
		private double _Jiushui;
		
		private double _JiushuiZhuoshu;
		
		private double _WeikuanDikou;
		
		private double _EXzhuohua;
		
		private double _EXqita;
		
		private EntityRef<WeddingOrders> _WeddingOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnCaijinChanging(double value);
    partial void OnCaijinChanged();
    partial void OnCaijinZhuoshuChanging(double value);
    partial void OnCaijinZhuoshuChanged();
    partial void OnJiushuiChanging(double value);
    partial void OnJiushuiChanged();
    partial void OnJiushuiZhuoshuChanging(double value);
    partial void OnJiushuiZhuoshuChanged();
    partial void OnWeikuanDikouChanging(double value);
    partial void OnWeikuanDikouChanged();
    partial void OnEXzhuohuaChanging(double value);
    partial void OnEXzhuohuaChanged();
    partial void OnEXqitaChanging(double value);
    partial void OnEXqitaChanged();
    #endregion
		
		public WeddingExtraPayContent()
		{
			this._WeddingOrders = default(EntityRef<WeddingOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._WeddingOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caijin", DbType="Float NOT NULL")]
		public double Caijin
		{
			get
			{
				return this._Caijin;
			}
			set
			{
				if ((this._Caijin != value))
				{
					this.OnCaijinChanging(value);
					this.SendPropertyChanging();
					this._Caijin = value;
					this.SendPropertyChanged("Caijin");
					this.OnCaijinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaijinZhuoshu", DbType="Float NOT NULL")]
		public double CaijinZhuoshu
		{
			get
			{
				return this._CaijinZhuoshu;
			}
			set
			{
				if ((this._CaijinZhuoshu != value))
				{
					this.OnCaijinZhuoshuChanging(value);
					this.SendPropertyChanging();
					this._CaijinZhuoshu = value;
					this.SendPropertyChanged("CaijinZhuoshu");
					this.OnCaijinZhuoshuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jiushui", DbType="Float NOT NULL")]
		public double Jiushui
		{
			get
			{
				return this._Jiushui;
			}
			set
			{
				if ((this._Jiushui != value))
				{
					this.OnJiushuiChanging(value);
					this.SendPropertyChanging();
					this._Jiushui = value;
					this.SendPropertyChanged("Jiushui");
					this.OnJiushuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JiushuiZhuoshu", DbType="Float NOT NULL")]
		public double JiushuiZhuoshu
		{
			get
			{
				return this._JiushuiZhuoshu;
			}
			set
			{
				if ((this._JiushuiZhuoshu != value))
				{
					this.OnJiushuiZhuoshuChanging(value);
					this.SendPropertyChanging();
					this._JiushuiZhuoshu = value;
					this.SendPropertyChanged("JiushuiZhuoshu");
					this.OnJiushuiZhuoshuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeikuanDikou", DbType="Float NOT NULL")]
		public double WeikuanDikou
		{
			get
			{
				return this._WeikuanDikou;
			}
			set
			{
				if ((this._WeikuanDikou != value))
				{
					this.OnWeikuanDikouChanging(value);
					this.SendPropertyChanging();
					this._WeikuanDikou = value;
					this.SendPropertyChanged("WeikuanDikou");
					this.OnWeikuanDikouChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXzhuohua", DbType="Float NOT NULL")]
		public double EXzhuohua
		{
			get
			{
				return this._EXzhuohua;
			}
			set
			{
				if ((this._EXzhuohua != value))
				{
					this.OnEXzhuohuaChanging(value);
					this.SendPropertyChanging();
					this._EXzhuohua = value;
					this.SendPropertyChanged("EXzhuohua");
					this.OnEXzhuohuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXqita", DbType="Float NOT NULL")]
		public double EXqita
		{
			get
			{
				return this._EXqita;
			}
			set
			{
				if ((this._EXqita != value))
				{
					this.OnEXqitaChanging(value);
					this.SendPropertyChanging();
					this._EXqita = value;
					this.SendPropertyChanged("EXqita");
					this.OnEXqitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeddingOrders_WeddingExtraPayContent", Storage="_WeddingOrders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public WeddingOrders WeddingOrders
		{
			get
			{
				return this._WeddingOrders.Entity;
			}
			set
			{
				WeddingOrders previousValue = this._WeddingOrders.Entity;
				if (((previousValue != value) 
							|| (this._WeddingOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeddingOrders.Entity = null;
						previousValue.WeddingExtraPayContent.Remove(this);
					}
					this._WeddingOrders.Entity = value;
					if ((value != null))
					{
						value.WeddingExtraPayContent.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("WeddingOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeddingOrdersLogs")]
	public partial class WeddingOrdersLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrderID;
		
		private string _UserName;
		
		private string _UserRole;
		
		private string _ActionName;
		
		private string _ActionType;
		
		private string _Comments;
		
		private System.DateTime _Date;
		
		private EntityRef<WeddingOrders> _WeddingOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserRoleChanging(string value);
    partial void OnUserRoleChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnActionTypeChanging(string value);
    partial void OnActionTypeChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public WeddingOrdersLogs()
		{
			this._WeddingOrders = default(EntityRef<WeddingOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._WeddingOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					this.OnUserRoleChanging(value);
					this.SendPropertyChanging();
					this._UserRole = value;
					this.SendPropertyChanged("UserRole");
					this.OnUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeddingOrders_WeddingOrdersLogs", Storage="_WeddingOrders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public WeddingOrders WeddingOrders
		{
			get
			{
				return this._WeddingOrders.Entity;
			}
			set
			{
				WeddingOrders previousValue = this._WeddingOrders.Entity;
				if (((previousValue != value) 
							|| (this._WeddingOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeddingOrders.Entity = null;
						previousValue.WeddingOrdersLogs.Remove(this);
					}
					this._WeddingOrders.Entity = value;
					if ((value != null))
					{
						value.WeddingOrdersLogs.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("WeddingOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbWeddingOrdersRevision")]
	public partial class tbWeddingOrdersRevision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ContractID;
		
		private int _OrderID;
		
		private string _OrderName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnOrderNameChanging(string value);
    partial void OnOrderNameChanged();
    #endregion
		
		public tbWeddingOrdersRevision()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string OrderName
		{
			get
			{
				return this._OrderName;
			}
			set
			{
				if ((this._OrderName != value))
				{
					this.OnOrderNameChanging(value);
					this.SendPropertyChanging();
					this._OrderName = value;
					this.SendPropertyChanged("OrderName");
					this.OnOrderNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysAuditModifyConfig")]
	public partial class tbSysAuditModifyConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Role;
		
		private int _Priority;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public tbSysAuditModifyConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysStandardWeddingDateLevel")]
	public partial class tbSysStandardWeddingDateLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Date;
		
		private string _DateLevel;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDateLevelChanging(string value);
    partial void OnDateLevelChanged();
    #endregion
		
		public tbSysStandardWeddingDateLevel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLevel", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DateLevel
		{
			get
			{
				return this._DateLevel;
			}
			set
			{
				if ((this._DateLevel != value))
				{
					this.OnDateLevelChanging(value);
					this.SendPropertyChanging();
					this._DateLevel = value;
					this.SendPropertyChanged("DateLevel");
					this.OnDateLevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysStandardWeddingPrice")]
	public partial class tbSysStandardWeddingPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private double _StandardPrice;
		
		private string _VenueName;
		
		private string _DateLevel;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStandardPriceChanging(double value);
    partial void OnStandardPriceChanged();
    partial void OnVenueNameChanging(string value);
    partial void OnVenueNameChanged();
    partial void OnDateLevelChanging(string value);
    partial void OnDateLevelChanged();
    #endregion
		
		public tbSysStandardWeddingPrice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardPrice", DbType="Float NOT NULL")]
		public double StandardPrice
		{
			get
			{
				return this._StandardPrice;
			}
			set
			{
				if ((this._StandardPrice != value))
				{
					this.OnStandardPriceChanging(value);
					this.SendPropertyChanging();
					this._StandardPrice = value;
					this.SendPropertyChanged("StandardPrice");
					this.OnStandardPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string VenueName
		{
			get
			{
				return this._VenueName;
			}
			set
			{
				if ((this._VenueName != value))
				{
					this.OnVenueNameChanging(value);
					this.SendPropertyChanging();
					this._VenueName = value;
					this.SendPropertyChanged("VenueName");
					this.OnVenueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLevel", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DateLevel
		{
			get
			{
				return this._DateLevel;
			}
			set
			{
				if ((this._DateLevel != value))
				{
					this.OnDateLevelChanging(value);
					this.SendPropertyChanging();
					this._DateLevel = value;
					this.SendPropertyChanged("DateLevel");
					this.OnDateLevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysEventType")]
	public partial class tbSysEventType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public tbSysEventType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysQudao")]
	public partial class tbSysQudao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Qudao;
		
		private string _Cate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQudaoChanging(string value);
    partial void OnQudaoChanged();
    partial void OnCateChanging(string value);
    partial void OnCateChanged();
    #endregion
		
		public tbSysQudao()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qudao", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Qudao
		{
			get
			{
				return this._Qudao;
			}
			set
			{
				if ((this._Qudao != value))
				{
					this.OnQudaoChanging(value);
					this.SendPropertyChanging();
					this._Qudao = value;
					this.SendPropertyChanged("Qudao");
					this.OnQudaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cate", DbType="NVarChar(200)")]
		public string Cate
		{
			get
			{
				return this._Cate;
			}
			set
			{
				if ((this._Cate != value))
				{
					this.OnCateChanging(value);
					this.SendPropertyChanging();
					this._Cate = value;
					this.SendPropertyChanged("Cate");
					this.OnCateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Source;
		
		private string _SourceNb;
		
		private string _ZixunDiDian;
		
		private System.DateTime _CreationDate;
		
		private string _CustomerName;
		
		private string _Company;
		
		private string _Telephone;
		
		private string _QQNb;
		
		private string _CustomerType;
		
		private string _Zhuoshu;
		
		private string _EventDate;
		
		private string _Yuyue;
		
		private string _Zhuangtai;
		
		private int _DaoDianCount;
		
		private string _NeedHuiFang;
		
		private string _Xiafashijian;
		
		private string _Sales;
		
		private string _Kefu;
		
		private string _Beizhu;
		
		private string _KefuFollow;
		
		private string _AuditType;
		
		private string _AuditContent;
		
		private string _AuditStatus;
		
		private EntitySet<CustomerFollowBySales> _CustomerFollowBySales;
		
		private EntitySet<CustomerFollowBySales_Bussiness> _CustomerFollowBySales_Bussiness;
		
		private EntitySet<CustomerRecords> _CustomerRecords;
		
		private EntitySet<CustomerFollowByKefu> _CustomerFollowByKefu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnSourceNbChanging(string value);
    partial void OnSourceNbChanged();
    partial void OnZixunDiDianChanging(string value);
    partial void OnZixunDiDianChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnQQNbChanging(string value);
    partial void OnQQNbChanged();
    partial void OnCustomerTypeChanging(string value);
    partial void OnCustomerTypeChanged();
    partial void OnZhuoshuChanging(string value);
    partial void OnZhuoshuChanged();
    partial void OnEventDateChanging(string value);
    partial void OnEventDateChanged();
    partial void OnYuyueChanging(string value);
    partial void OnYuyueChanged();
    partial void OnZhuangtaiChanging(string value);
    partial void OnZhuangtaiChanged();
    partial void OnDaoDianCountChanging(int value);
    partial void OnDaoDianCountChanged();
    partial void OnNeedHuiFangChanging(string value);
    partial void OnNeedHuiFangChanged();
    partial void OnXiafashijianChanging(string value);
    partial void OnXiafashijianChanged();
    partial void OnSalesChanging(string value);
    partial void OnSalesChanged();
    partial void OnKefuChanging(string value);
    partial void OnKefuChanged();
    partial void OnBeizhuChanging(string value);
    partial void OnBeizhuChanged();
    partial void OnKefuFollowChanging(string value);
    partial void OnKefuFollowChanged();
    partial void OnAuditTypeChanging(string value);
    partial void OnAuditTypeChanged();
    partial void OnAuditContentChanging(string value);
    partial void OnAuditContentChanged();
    partial void OnAuditStatusChanging(string value);
    partial void OnAuditStatusChanged();
    #endregion
		
		public Customers()
		{
			this._CustomerFollowBySales = new EntitySet<CustomerFollowBySales>(new Action<CustomerFollowBySales>(this.attach_CustomerFollowBySales), new Action<CustomerFollowBySales>(this.detach_CustomerFollowBySales));
			this._CustomerFollowBySales_Bussiness = new EntitySet<CustomerFollowBySales_Bussiness>(new Action<CustomerFollowBySales_Bussiness>(this.attach_CustomerFollowBySales_Bussiness), new Action<CustomerFollowBySales_Bussiness>(this.detach_CustomerFollowBySales_Bussiness));
			this._CustomerRecords = new EntitySet<CustomerRecords>(new Action<CustomerRecords>(this.attach_CustomerRecords), new Action<CustomerRecords>(this.detach_CustomerRecords));
			this._CustomerFollowByKefu = new EntitySet<CustomerFollowByKefu>(new Action<CustomerFollowByKefu>(this.attach_CustomerFollowByKefu), new Action<CustomerFollowByKefu>(this.detach_CustomerFollowByKefu));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceNb", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SourceNb
		{
			get
			{
				return this._SourceNb;
			}
			set
			{
				if ((this._SourceNb != value))
				{
					this.OnSourceNbChanging(value);
					this.SendPropertyChanging();
					this._SourceNb = value;
					this.SendPropertyChanged("SourceNb");
					this.OnSourceNbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZixunDiDian", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ZixunDiDian
		{
			get
			{
				return this._ZixunDiDian;
			}
			set
			{
				if ((this._ZixunDiDian != value))
				{
					this.OnZixunDiDianChanging(value);
					this.SendPropertyChanging();
					this._ZixunDiDian = value;
					this.SendPropertyChanged("ZixunDiDian");
					this.OnZixunDiDianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="Date NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(200)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQNb", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string QQNb
		{
			get
			{
				return this._QQNb;
			}
			set
			{
				if ((this._QQNb != value))
				{
					this.OnQQNbChanging(value);
					this.SendPropertyChanging();
					this._QQNb = value;
					this.SendPropertyChanged("QQNb");
					this.OnQQNbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhuoshu", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Zhuoshu
		{
			get
			{
				return this._Zhuoshu;
			}
			set
			{
				if ((this._Zhuoshu != value))
				{
					this.OnZhuoshuChanging(value);
					this.SendPropertyChanging();
					this._Zhuoshu = value;
					this.SendPropertyChanged("Zhuoshu");
					this.OnZhuoshuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yuyue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Yuyue
		{
			get
			{
				return this._Yuyue;
			}
			set
			{
				if ((this._Yuyue != value))
				{
					this.OnYuyueChanging(value);
					this.SendPropertyChanging();
					this._Yuyue = value;
					this.SendPropertyChanged("Yuyue");
					this.OnYuyueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhuangtai", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Zhuangtai
		{
			get
			{
				return this._Zhuangtai;
			}
			set
			{
				if ((this._Zhuangtai != value))
				{
					this.OnZhuangtaiChanging(value);
					this.SendPropertyChanging();
					this._Zhuangtai = value;
					this.SendPropertyChanged("Zhuangtai");
					this.OnZhuangtaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaoDianCount", DbType="Int NOT NULL")]
		public int DaoDianCount
		{
			get
			{
				return this._DaoDianCount;
			}
			set
			{
				if ((this._DaoDianCount != value))
				{
					this.OnDaoDianCountChanging(value);
					this.SendPropertyChanging();
					this._DaoDianCount = value;
					this.SendPropertyChanged("DaoDianCount");
					this.OnDaoDianCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedHuiFang", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string NeedHuiFang
		{
			get
			{
				return this._NeedHuiFang;
			}
			set
			{
				if ((this._NeedHuiFang != value))
				{
					this.OnNeedHuiFangChanging(value);
					this.SendPropertyChanging();
					this._NeedHuiFang = value;
					this.SendPropertyChanged("NeedHuiFang");
					this.OnNeedHuiFangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xiafashijian", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Xiafashijian
		{
			get
			{
				return this._Xiafashijian;
			}
			set
			{
				if ((this._Xiafashijian != value))
				{
					this.OnXiafashijianChanging(value);
					this.SendPropertyChanging();
					this._Xiafashijian = value;
					this.SendPropertyChanged("Xiafashijian");
					this.OnXiafashijianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sales", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Sales
		{
			get
			{
				return this._Sales;
			}
			set
			{
				if ((this._Sales != value))
				{
					this.OnSalesChanging(value);
					this.SendPropertyChanging();
					this._Sales = value;
					this.SendPropertyChanged("Sales");
					this.OnSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kefu", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Kefu
		{
			get
			{
				return this._Kefu;
			}
			set
			{
				if ((this._Kefu != value))
				{
					this.OnKefuChanging(value);
					this.SendPropertyChanging();
					this._Kefu = value;
					this.SendPropertyChanged("Kefu");
					this.OnKefuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beizhu", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Beizhu
		{
			get
			{
				return this._Beizhu;
			}
			set
			{
				if ((this._Beizhu != value))
				{
					this.OnBeizhuChanging(value);
					this.SendPropertyChanging();
					this._Beizhu = value;
					this.SendPropertyChanged("Beizhu");
					this.OnBeizhuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KefuFollow", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string KefuFollow
		{
			get
			{
				return this._KefuFollow;
			}
			set
			{
				if ((this._KefuFollow != value))
				{
					this.OnKefuFollowChanging(value);
					this.SendPropertyChanging();
					this._KefuFollow = value;
					this.SendPropertyChanged("KefuFollow");
					this.OnKefuFollowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditType
		{
			get
			{
				return this._AuditType;
			}
			set
			{
				if ((this._AuditType != value))
				{
					this.OnAuditTypeChanging(value);
					this.SendPropertyChanging();
					this._AuditType = value;
					this.SendPropertyChanged("AuditType");
					this.OnAuditTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AuditContent
		{
			get
			{
				return this._AuditContent;
			}
			set
			{
				if ((this._AuditContent != value))
				{
					this.OnAuditContentChanging(value);
					this.SendPropertyChanging();
					this._AuditContent = value;
					this.SendPropertyChanged("AuditContent");
					this.OnAuditContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditStatus", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditStatus
		{
			get
			{
				return this._AuditStatus;
			}
			set
			{
				if ((this._AuditStatus != value))
				{
					this.OnAuditStatusChanging(value);
					this.SendPropertyChanging();
					this._AuditStatus = value;
					this.SendPropertyChanged("AuditStatus");
					this.OnAuditStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_CustomerFollowBySales", Storage="_CustomerFollowBySales", ThisKey="ID", OtherKey="MainID")]
		public EntitySet<CustomerFollowBySales> CustomerFollowBySales
		{
			get
			{
				return this._CustomerFollowBySales;
			}
			set
			{
				this._CustomerFollowBySales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_CustomerFollowBySales_Bussiness", Storage="_CustomerFollowBySales_Bussiness", ThisKey="ID", OtherKey="MainID")]
		public EntitySet<CustomerFollowBySales_Bussiness> CustomerFollowBySales_Bussiness
		{
			get
			{
				return this._CustomerFollowBySales_Bussiness;
			}
			set
			{
				this._CustomerFollowBySales_Bussiness.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_CustomerRecords", Storage="_CustomerRecords", ThisKey="ID", OtherKey="MainID")]
		public EntitySet<CustomerRecords> CustomerRecords
		{
			get
			{
				return this._CustomerRecords;
			}
			set
			{
				this._CustomerRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_CustomerFollowByKefu", Storage="_CustomerFollowByKefu", ThisKey="ID", OtherKey="MainID")]
		public EntitySet<CustomerFollowByKefu> CustomerFollowByKefu
		{
			get
			{
				return this._CustomerFollowByKefu;
			}
			set
			{
				this._CustomerFollowByKefu.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerFollowBySales(CustomerFollowBySales entity)
		{
			this.SendPropertyChanging();
			entity.Customers = this;
		}
		
		private void detach_CustomerFollowBySales(CustomerFollowBySales entity)
		{
			this.SendPropertyChanging();
			entity.Customers = null;
		}
		
		private void attach_CustomerFollowBySales_Bussiness(CustomerFollowBySales_Bussiness entity)
		{
			this.SendPropertyChanging();
			entity.Customers = this;
		}
		
		private void detach_CustomerFollowBySales_Bussiness(CustomerFollowBySales_Bussiness entity)
		{
			this.SendPropertyChanging();
			entity.Customers = null;
		}
		
		private void attach_CustomerRecords(CustomerRecords entity)
		{
			this.SendPropertyChanging();
			entity.Customers = this;
		}
		
		private void detach_CustomerRecords(CustomerRecords entity)
		{
			this.SendPropertyChanging();
			entity.Customers = null;
		}
		
		private void attach_CustomerFollowByKefu(CustomerFollowByKefu entity)
		{
			this.SendPropertyChanging();
			entity.Customers = this;
		}
		
		private void detach_CustomerFollowByKefu(CustomerFollowByKefu entity)
		{
			this.SendPropertyChanging();
			entity.Customers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerFollowBySales")]
	public partial class CustomerFollowBySales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MainID;
		
		private string _IsDaoDian;
		
		private string _DaoDianDate;
		
		private string _isChengDan;
		
		private string _SourceDiscount;
		
		private string _FeedBack;
		
		private System.DateTime _FollowDate;
		
		private string _UserName;
		
		private string _UserRole;
		
		private EntityRef<Customers> _Customers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMainIDChanging(int value);
    partial void OnMainIDChanged();
    partial void OnIsDaoDianChanging(string value);
    partial void OnIsDaoDianChanged();
    partial void OnDaoDianDateChanging(string value);
    partial void OnDaoDianDateChanged();
    partial void OnisChengDanChanging(string value);
    partial void OnisChengDanChanged();
    partial void OnSourceDiscountChanging(string value);
    partial void OnSourceDiscountChanged();
    partial void OnFeedBackChanging(string value);
    partial void OnFeedBackChanged();
    partial void OnFollowDateChanging(System.DateTime value);
    partial void OnFollowDateChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserRoleChanging(string value);
    partial void OnUserRoleChanged();
    #endregion
		
		public CustomerFollowBySales()
		{
			this._Customers = default(EntityRef<Customers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="Int NOT NULL")]
		public int MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					if (this._Customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDaoDian", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string IsDaoDian
		{
			get
			{
				return this._IsDaoDian;
			}
			set
			{
				if ((this._IsDaoDian != value))
				{
					this.OnIsDaoDianChanging(value);
					this.SendPropertyChanging();
					this._IsDaoDian = value;
					this.SendPropertyChanged("IsDaoDian");
					this.OnIsDaoDianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaoDianDate", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DaoDianDate
		{
			get
			{
				return this._DaoDianDate;
			}
			set
			{
				if ((this._DaoDianDate != value))
				{
					this.OnDaoDianDateChanging(value);
					this.SendPropertyChanging();
					this._DaoDianDate = value;
					this.SendPropertyChanged("DaoDianDate");
					this.OnDaoDianDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isChengDan", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string isChengDan
		{
			get
			{
				return this._isChengDan;
			}
			set
			{
				if ((this._isChengDan != value))
				{
					this.OnisChengDanChanging(value);
					this.SendPropertyChanging();
					this._isChengDan = value;
					this.SendPropertyChanged("isChengDan");
					this.OnisChengDanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDiscount", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SourceDiscount
		{
			get
			{
				return this._SourceDiscount;
			}
			set
			{
				if ((this._SourceDiscount != value))
				{
					this.OnSourceDiscountChanging(value);
					this.SendPropertyChanging();
					this._SourceDiscount = value;
					this.SendPropertyChanged("SourceDiscount");
					this.OnSourceDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedBack", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FeedBack
		{
			get
			{
				return this._FeedBack;
			}
			set
			{
				if ((this._FeedBack != value))
				{
					this.OnFeedBackChanging(value);
					this.SendPropertyChanging();
					this._FeedBack = value;
					this.SendPropertyChanged("FeedBack");
					this.OnFeedBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowDate", DbType="DateTime NOT NULL")]
		public System.DateTime FollowDate
		{
			get
			{
				return this._FollowDate;
			}
			set
			{
				if ((this._FollowDate != value))
				{
					this.OnFollowDateChanging(value);
					this.SendPropertyChanging();
					this._FollowDate = value;
					this.SendPropertyChanged("FollowDate");
					this.OnFollowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					this.OnUserRoleChanging(value);
					this.SendPropertyChanging();
					this._UserRole = value;
					this.SendPropertyChanged("UserRole");
					this.OnUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_CustomerFollowBySales", Storage="_Customers", ThisKey="MainID", OtherKey="ID", IsForeignKey=true)]
		public Customers Customers
		{
			get
			{
				return this._Customers.Entity;
			}
			set
			{
				Customers previousValue = this._Customers.Entity;
				if (((previousValue != value) 
							|| (this._Customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customers.Entity = null;
						previousValue.CustomerFollowBySales.Remove(this);
					}
					this._Customers.Entity = value;
					if ((value != null))
					{
						value.CustomerFollowBySales.Add(this);
						this._MainID = value.ID;
					}
					else
					{
						this._MainID = default(int);
					}
					this.SendPropertyChanged("Customers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerFollowBySales_Bussiness")]
	public partial class CustomerFollowBySales_Bussiness : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MainID;
		
		private string _isChengDan;
		
		private System.DateTime _FollowDate;
		
		private string _UserName;
		
		private string _Feedback;
		
		private EntityRef<Customers> _Customers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMainIDChanging(int value);
    partial void OnMainIDChanged();
    partial void OnisChengDanChanging(string value);
    partial void OnisChengDanChanged();
    partial void OnFollowDateChanging(System.DateTime value);
    partial void OnFollowDateChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFeedbackChanging(string value);
    partial void OnFeedbackChanged();
    #endregion
		
		public CustomerFollowBySales_Bussiness()
		{
			this._Customers = default(EntityRef<Customers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="Int NOT NULL")]
		public int MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					if (this._Customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isChengDan", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string isChengDan
		{
			get
			{
				return this._isChengDan;
			}
			set
			{
				if ((this._isChengDan != value))
				{
					this.OnisChengDanChanging(value);
					this.SendPropertyChanging();
					this._isChengDan = value;
					this.SendPropertyChanged("isChengDan");
					this.OnisChengDanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowDate", DbType="DateTime NOT NULL")]
		public System.DateTime FollowDate
		{
			get
			{
				return this._FollowDate;
			}
			set
			{
				if ((this._FollowDate != value))
				{
					this.OnFollowDateChanging(value);
					this.SendPropertyChanging();
					this._FollowDate = value;
					this.SendPropertyChanged("FollowDate");
					this.OnFollowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_CustomerFollowBySales_Bussiness", Storage="_Customers", ThisKey="MainID", OtherKey="ID", IsForeignKey=true)]
		public Customers Customers
		{
			get
			{
				return this._Customers.Entity;
			}
			set
			{
				Customers previousValue = this._Customers.Entity;
				if (((previousValue != value) 
							|| (this._Customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customers.Entity = null;
						previousValue.CustomerFollowBySales_Bussiness.Remove(this);
					}
					this._Customers.Entity = value;
					if ((value != null))
					{
						value.CustomerFollowBySales_Bussiness.Add(this);
						this._MainID = value.ID;
					}
					else
					{
						this._MainID = default(int);
					}
					this.SendPropertyChanged("Customers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerRecords")]
	public partial class CustomerRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MainID;
		
		private System.DateTime _ModifyDate;
		
		private string _ModifyRecord;
		
		private string _ModifyUser;
		
		private EntityRef<Customers> _Customers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMainIDChanging(int value);
    partial void OnMainIDChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnModifyRecordChanging(string value);
    partial void OnModifyRecordChanged();
    partial void OnModifyUserChanging(string value);
    partial void OnModifyUserChanged();
    #endregion
		
		public CustomerRecords()
		{
			this._Customers = default(EntityRef<Customers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="Int NOT NULL")]
		public int MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					if (this._Customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyRecord", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ModifyRecord
		{
			get
			{
				return this._ModifyRecord;
			}
			set
			{
				if ((this._ModifyRecord != value))
				{
					this.OnModifyRecordChanging(value);
					this.SendPropertyChanging();
					this._ModifyRecord = value;
					this.SendPropertyChanged("ModifyRecord");
					this.OnModifyRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUser", DbType="NVarChar(200)")]
		public string ModifyUser
		{
			get
			{
				return this._ModifyUser;
			}
			set
			{
				if ((this._ModifyUser != value))
				{
					this.OnModifyUserChanging(value);
					this.SendPropertyChanging();
					this._ModifyUser = value;
					this.SendPropertyChanged("ModifyUser");
					this.OnModifyUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_CustomerRecords", Storage="_Customers", ThisKey="MainID", OtherKey="ID", IsForeignKey=true)]
		public Customers Customers
		{
			get
			{
				return this._Customers.Entity;
			}
			set
			{
				Customers previousValue = this._Customers.Entity;
				if (((previousValue != value) 
							|| (this._Customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customers.Entity = null;
						previousValue.CustomerRecords.Remove(this);
					}
					this._Customers.Entity = value;
					if ((value != null))
					{
						value.CustomerRecords.Add(this);
						this._MainID = value.ID;
					}
					else
					{
						this._MainID = default(int);
					}
					this.SendPropertyChanged("Customers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerFollowByKefu")]
	public partial class CustomerFollowByKefu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MainID;
		
		private string _HuiFangRiqi;
		
		private string _HuiFangKefu;
		
		private string _HuiFangXinxi;
		
		private System.DateTime _FollowDate;
		
		private string _UserName;
		
		private string _UserRole;
		
		private EntityRef<Customers> _Customers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMainIDChanging(int value);
    partial void OnMainIDChanged();
    partial void OnHuiFangRiqiChanging(string value);
    partial void OnHuiFangRiqiChanged();
    partial void OnHuiFangKefuChanging(string value);
    partial void OnHuiFangKefuChanged();
    partial void OnHuiFangXinxiChanging(string value);
    partial void OnHuiFangXinxiChanged();
    partial void OnFollowDateChanging(System.DateTime value);
    partial void OnFollowDateChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserRoleChanging(string value);
    partial void OnUserRoleChanged();
    #endregion
		
		public CustomerFollowByKefu()
		{
			this._Customers = default(EntityRef<Customers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="Int NOT NULL")]
		public int MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					if (this._Customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HuiFangRiqi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HuiFangRiqi
		{
			get
			{
				return this._HuiFangRiqi;
			}
			set
			{
				if ((this._HuiFangRiqi != value))
				{
					this.OnHuiFangRiqiChanging(value);
					this.SendPropertyChanging();
					this._HuiFangRiqi = value;
					this.SendPropertyChanged("HuiFangRiqi");
					this.OnHuiFangRiqiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HuiFangKefu", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HuiFangKefu
		{
			get
			{
				return this._HuiFangKefu;
			}
			set
			{
				if ((this._HuiFangKefu != value))
				{
					this.OnHuiFangKefuChanging(value);
					this.SendPropertyChanging();
					this._HuiFangKefu = value;
					this.SendPropertyChanged("HuiFangKefu");
					this.OnHuiFangKefuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HuiFangXinxi", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HuiFangXinxi
		{
			get
			{
				return this._HuiFangXinxi;
			}
			set
			{
				if ((this._HuiFangXinxi != value))
				{
					this.OnHuiFangXinxiChanging(value);
					this.SendPropertyChanging();
					this._HuiFangXinxi = value;
					this.SendPropertyChanged("HuiFangXinxi");
					this.OnHuiFangXinxiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowDate", DbType="DateTime NOT NULL")]
		public System.DateTime FollowDate
		{
			get
			{
				return this._FollowDate;
			}
			set
			{
				if ((this._FollowDate != value))
				{
					this.OnFollowDateChanging(value);
					this.SendPropertyChanging();
					this._FollowDate = value;
					this.SendPropertyChanged("FollowDate");
					this.OnFollowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					this.OnUserRoleChanging(value);
					this.SendPropertyChanging();
					this._UserRole = value;
					this.SendPropertyChanged("UserRole");
					this.OnUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_CustomerFollowByKefu", Storage="_Customers", ThisKey="MainID", OtherKey="ID", IsForeignKey=true)]
		public Customers Customers
		{
			get
			{
				return this._Customers.Entity;
			}
			set
			{
				Customers previousValue = this._Customers.Entity;
				if (((previousValue != value) 
							|| (this._Customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customers.Entity = null;
						previousValue.CustomerFollowByKefu.Remove(this);
					}
					this._Customers.Entity = value;
					if ((value != null))
					{
						value.CustomerFollowByKefu.Add(this);
						this._MainID = value.ID;
					}
					else
					{
						this._MainID = default(int);
					}
					this.SendPropertyChanged("Customers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BussinessEventFormat")]
	public partial class BussinessEventFormat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MainID;
		
		private string _EventFormat;
		
		private string _Yongcan;
		
		private string _Venue;
		
		private System.Nullable<double> _Dajianfei;
		
		private System.Nullable<double> _Changdifei;
		
		private System.Nullable<double> _Canbiao;
		
		private System.Nullable<double> _ShuiliangA;
		
		private string _DanweiA;
		
		private System.Nullable<double> _Jiushui;
		
		private System.Nullable<double> _ShuiliangB;
		
		private string _DanweiB;
		
		private EntityRef<Bussiness> _Bussiness;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMainIDChanging(int value);
    partial void OnMainIDChanged();
    partial void OnEventFormatChanging(string value);
    partial void OnEventFormatChanged();
    partial void OnYongcanChanging(string value);
    partial void OnYongcanChanged();
    partial void OnVenueChanging(string value);
    partial void OnVenueChanged();
    partial void OnDajianfeiChanging(System.Nullable<double> value);
    partial void OnDajianfeiChanged();
    partial void OnChangdifeiChanging(System.Nullable<double> value);
    partial void OnChangdifeiChanged();
    partial void OnCanbiaoChanging(System.Nullable<double> value);
    partial void OnCanbiaoChanged();
    partial void OnShuiliangAChanging(System.Nullable<double> value);
    partial void OnShuiliangAChanged();
    partial void OnDanweiAChanging(string value);
    partial void OnDanweiAChanged();
    partial void OnJiushuiChanging(System.Nullable<double> value);
    partial void OnJiushuiChanged();
    partial void OnShuiliangBChanging(System.Nullable<double> value);
    partial void OnShuiliangBChanged();
    partial void OnDanweiBChanging(string value);
    partial void OnDanweiBChanged();
    #endregion
		
		public BussinessEventFormat()
		{
			this._Bussiness = default(EntityRef<Bussiness>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="Int NOT NULL")]
		public int MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					if (this._Bussiness.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventFormat", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EventFormat
		{
			get
			{
				return this._EventFormat;
			}
			set
			{
				if ((this._EventFormat != value))
				{
					this.OnEventFormatChanging(value);
					this.SendPropertyChanging();
					this._EventFormat = value;
					this.SendPropertyChanged("EventFormat");
					this.OnEventFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yongcan", DbType="NVarChar(200)")]
		public string Yongcan
		{
			get
			{
				return this._Yongcan;
			}
			set
			{
				if ((this._Yongcan != value))
				{
					this.OnYongcanChanging(value);
					this.SendPropertyChanging();
					this._Yongcan = value;
					this.SendPropertyChanged("Yongcan");
					this.OnYongcanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venue", DbType="NVarChar(200)")]
		public string Venue
		{
			get
			{
				return this._Venue;
			}
			set
			{
				if ((this._Venue != value))
				{
					this.OnVenueChanging(value);
					this.SendPropertyChanging();
					this._Venue = value;
					this.SendPropertyChanged("Venue");
					this.OnVenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dajianfei", DbType="Float")]
		public System.Nullable<double> Dajianfei
		{
			get
			{
				return this._Dajianfei;
			}
			set
			{
				if ((this._Dajianfei != value))
				{
					this.OnDajianfeiChanging(value);
					this.SendPropertyChanging();
					this._Dajianfei = value;
					this.SendPropertyChanged("Dajianfei");
					this.OnDajianfeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changdifei", DbType="Float")]
		public System.Nullable<double> Changdifei
		{
			get
			{
				return this._Changdifei;
			}
			set
			{
				if ((this._Changdifei != value))
				{
					this.OnChangdifeiChanging(value);
					this.SendPropertyChanging();
					this._Changdifei = value;
					this.SendPropertyChanged("Changdifei");
					this.OnChangdifeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Canbiao", DbType="Float")]
		public System.Nullable<double> Canbiao
		{
			get
			{
				return this._Canbiao;
			}
			set
			{
				if ((this._Canbiao != value))
				{
					this.OnCanbiaoChanging(value);
					this.SendPropertyChanging();
					this._Canbiao = value;
					this.SendPropertyChanged("Canbiao");
					this.OnCanbiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShuiliangA", DbType="Float")]
		public System.Nullable<double> ShuiliangA
		{
			get
			{
				return this._ShuiliangA;
			}
			set
			{
				if ((this._ShuiliangA != value))
				{
					this.OnShuiliangAChanging(value);
					this.SendPropertyChanging();
					this._ShuiliangA = value;
					this.SendPropertyChanged("ShuiliangA");
					this.OnShuiliangAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanweiA", DbType="NVarChar(200)")]
		public string DanweiA
		{
			get
			{
				return this._DanweiA;
			}
			set
			{
				if ((this._DanweiA != value))
				{
					this.OnDanweiAChanging(value);
					this.SendPropertyChanging();
					this._DanweiA = value;
					this.SendPropertyChanged("DanweiA");
					this.OnDanweiAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jiushui", DbType="Float")]
		public System.Nullable<double> Jiushui
		{
			get
			{
				return this._Jiushui;
			}
			set
			{
				if ((this._Jiushui != value))
				{
					this.OnJiushuiChanging(value);
					this.SendPropertyChanging();
					this._Jiushui = value;
					this.SendPropertyChanged("Jiushui");
					this.OnJiushuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShuiliangB", DbType="Float")]
		public System.Nullable<double> ShuiliangB
		{
			get
			{
				return this._ShuiliangB;
			}
			set
			{
				if ((this._ShuiliangB != value))
				{
					this.OnShuiliangBChanging(value);
					this.SendPropertyChanging();
					this._ShuiliangB = value;
					this.SendPropertyChanged("ShuiliangB");
					this.OnShuiliangBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanweiB", DbType="NVarChar(200)")]
		public string DanweiB
		{
			get
			{
				return this._DanweiB;
			}
			set
			{
				if ((this._DanweiB != value))
				{
					this.OnDanweiBChanging(value);
					this.SendPropertyChanging();
					this._DanweiB = value;
					this.SendPropertyChanged("DanweiB");
					this.OnDanweiBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bussiness_BussinessEventFormat", Storage="_Bussiness", ThisKey="MainID", OtherKey="ID", IsForeignKey=true)]
		public Bussiness Bussiness
		{
			get
			{
				return this._Bussiness.Entity;
			}
			set
			{
				Bussiness previousValue = this._Bussiness.Entity;
				if (((previousValue != value) 
							|| (this._Bussiness.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bussiness.Entity = null;
						previousValue.BussinessEventFormat.Remove(this);
					}
					this._Bussiness.Entity = value;
					if ((value != null))
					{
						value.BussinessEventFormat.Add(this);
						this._MainID = value.ID;
					}
					else
					{
						this._MainID = default(int);
					}
					this.SendPropertyChanged("Bussiness");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysYongcan")]
	public partial class tbSysYongcan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _YongcanType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnYongcanTypeChanging(string value);
    partial void OnYongcanTypeChanged();
    #endregion
		
		public tbSysYongcan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YongcanType", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string YongcanType
		{
			get
			{
				return this._YongcanType;
			}
			set
			{
				if ((this._YongcanType != value))
				{
					this.OnYongcanTypeChanging(value);
					this.SendPropertyChanging();
					this._YongcanType = value;
					this.SendPropertyChanged("YongcanType");
					this.OnYongcanTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbSysAuditConfig_Bussiness")]
	public partial class tbSysAuditConfig_Bussiness : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Role;
		
		private int _Priority;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public tbSysAuditConfig_Bussiness()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BussinessAuditRecords")]
	public partial class BussinessAuditRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrderID;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _AuditLevel;
		
		private int _AuditPriority;
		
		private string _AuditResult;
		
		private string _AuditUser;
		
		private string _AuditSuggest;
		
		private string _AuditType;
		
		private EntityRef<Bussiness> _Bussiness;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnAuditLevelChanging(string value);
    partial void OnAuditLevelChanged();
    partial void OnAuditPriorityChanging(int value);
    partial void OnAuditPriorityChanged();
    partial void OnAuditResultChanging(string value);
    partial void OnAuditResultChanged();
    partial void OnAuditUserChanging(string value);
    partial void OnAuditUserChanged();
    partial void OnAuditSuggestChanging(string value);
    partial void OnAuditSuggestChanged();
    partial void OnAuditTypeChanging(string value);
    partial void OnAuditTypeChanged();
    #endregion
		
		public BussinessAuditRecords()
		{
			this._Bussiness = default(EntityRef<Bussiness>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Bussiness.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="Date")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditLevel", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditLevel
		{
			get
			{
				return this._AuditLevel;
			}
			set
			{
				if ((this._AuditLevel != value))
				{
					this.OnAuditLevelChanging(value);
					this.SendPropertyChanging();
					this._AuditLevel = value;
					this.SendPropertyChanged("AuditLevel");
					this.OnAuditLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditPriority", DbType="Int NOT NULL")]
		public int AuditPriority
		{
			get
			{
				return this._AuditPriority;
			}
			set
			{
				if ((this._AuditPriority != value))
				{
					this.OnAuditPriorityChanging(value);
					this.SendPropertyChanging();
					this._AuditPriority = value;
					this.SendPropertyChanged("AuditPriority");
					this.OnAuditPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditResult", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditResult
		{
			get
			{
				return this._AuditResult;
			}
			set
			{
				if ((this._AuditResult != value))
				{
					this.OnAuditResultChanging(value);
					this.SendPropertyChanging();
					this._AuditResult = value;
					this.SendPropertyChanged("AuditResult");
					this.OnAuditResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditUser", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditUser
		{
			get
			{
				return this._AuditUser;
			}
			set
			{
				if ((this._AuditUser != value))
				{
					this.OnAuditUserChanging(value);
					this.SendPropertyChanging();
					this._AuditUser = value;
					this.SendPropertyChanged("AuditUser");
					this.OnAuditUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditSuggest", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AuditSuggest
		{
			get
			{
				return this._AuditSuggest;
			}
			set
			{
				if ((this._AuditSuggest != value))
				{
					this.OnAuditSuggestChanging(value);
					this.SendPropertyChanging();
					this._AuditSuggest = value;
					this.SendPropertyChanged("AuditSuggest");
					this.OnAuditSuggestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string AuditType
		{
			get
			{
				return this._AuditType;
			}
			set
			{
				if ((this._AuditType != value))
				{
					this.OnAuditTypeChanging(value);
					this.SendPropertyChanging();
					this._AuditType = value;
					this.SendPropertyChanged("AuditType");
					this.OnAuditTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bussiness_BussinessAuditRecords", Storage="_Bussiness", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Bussiness Bussiness
		{
			get
			{
				return this._Bussiness.Entity;
			}
			set
			{
				Bussiness previousValue = this._Bussiness.Entity;
				if (((previousValue != value) 
							|| (this._Bussiness.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bussiness.Entity = null;
						previousValue.BussinessAuditRecords.Remove(this);
					}
					this._Bussiness.Entity = value;
					if ((value != null))
					{
						value.BussinessAuditRecords.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Bussiness");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BussinessAuditRevision")]
	public partial class BussinessAuditRevision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ContractID;
		
		private int _OrderID;
		
		private string _OrderName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnOrderNameChanging(string value);
    partial void OnOrderNameChanged();
    #endregion
		
		public BussinessAuditRevision()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string OrderName
		{
			get
			{
				return this._OrderName;
			}
			set
			{
				if ((this._OrderName != value))
				{
					this.OnOrderNameChanging(value);
					this.SendPropertyChanging();
					this._OrderName = value;
					this.SendPropertyChanged("OrderName");
					this.OnOrderNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbRili")]
	public partial class tbRili : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private bool _Status;
		
		private string _Title;
		
		private string _Can;
		
		private string _Renshu;
		
		private string _SalesName;
		
		private string _yishiChangdi;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Miaoshu;
		
		private string _Source;
		
		private string _IsConfirmed;
		
		private System.Nullable<int> _MainID;
		
		private string _Jine;
		
		private string _yanhuiting;
		
		private string _Type;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCanChanging(string value);
    partial void OnCanChanged();
    partial void OnRenshuChanging(string value);
    partial void OnRenshuChanged();
    partial void OnSalesNameChanging(string value);
    partial void OnSalesNameChanged();
    partial void OnyishiChangdiChanging(string value);
    partial void OnyishiChangdiChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnMiaoshuChanging(string value);
    partial void OnMiaoshuChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnIsConfirmedChanging(string value);
    partial void OnIsConfirmedChanged();
    partial void OnMainIDChanging(System.Nullable<int> value);
    partial void OnMainIDChanged();
    partial void OnJineChanging(string value);
    partial void OnJineChanged();
    partial void OnyanhuitingChanging(string value);
    partial void OnyanhuitingChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public tbRili()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Can", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Can
		{
			get
			{
				return this._Can;
			}
			set
			{
				if ((this._Can != value))
				{
					this.OnCanChanging(value);
					this.SendPropertyChanging();
					this._Can = value;
					this.SendPropertyChanged("Can");
					this.OnCanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Renshu", DbType="NVarChar(250)")]
		public string Renshu
		{
			get
			{
				return this._Renshu;
			}
			set
			{
				if ((this._Renshu != value))
				{
					this.OnRenshuChanging(value);
					this.SendPropertyChanging();
					this._Renshu = value;
					this.SendPropertyChanged("Renshu");
					this.OnRenshuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesName", DbType="NVarChar(200)")]
		public string SalesName
		{
			get
			{
				return this._SalesName;
			}
			set
			{
				if ((this._SalesName != value))
				{
					this.OnSalesNameChanging(value);
					this.SendPropertyChanging();
					this._SalesName = value;
					this.SendPropertyChanged("SalesName");
					this.OnSalesNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yishiChangdi", DbType="NVarChar(250)")]
		public string yishiChangdi
		{
			get
			{
				return this._yishiChangdi;
			}
			set
			{
				if ((this._yishiChangdi != value))
				{
					this.OnyishiChangdiChanging(value);
					this.SendPropertyChanging();
					this._yishiChangdi = value;
					this.SendPropertyChanged("yishiChangdi");
					this.OnyishiChangdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miaoshu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Miaoshu
		{
			get
			{
				return this._Miaoshu;
			}
			set
			{
				if ((this._Miaoshu != value))
				{
					this.OnMiaoshuChanging(value);
					this.SendPropertyChanging();
					this._Miaoshu = value;
					this.SendPropertyChanged("Miaoshu");
					this.OnMiaoshuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="Int")]
		public System.Nullable<int> MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jine", DbType="NVarChar(250)")]
		public string Jine
		{
			get
			{
				return this._Jine;
			}
			set
			{
				if ((this._Jine != value))
				{
					this.OnJineChanging(value);
					this.SendPropertyChanging();
					this._Jine = value;
					this.SendPropertyChanged("Jine");
					this.OnJineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yanhuiting", DbType="NVarChar(250)")]
		public string yanhuiting
		{
			get
			{
				return this._yanhuiting;
			}
			set
			{
				if ((this._yanhuiting != value))
				{
					this.OnyanhuitingChanging(value);
					this.SendPropertyChanging();
					this._yanhuiting = value;
					this.SendPropertyChanged("yanhuiting");
					this.OnyanhuitingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(250)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BussinessOrderLogs")]
	public partial class BussinessOrderLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrderID;
		
		private string _UserName;
		
		private string _UserRole;
		
		private string _ActionName;
		
		private string _ActionType;
		
		private string _Comments;
		
		private System.DateTime _Date;
		
		private EntityRef<Bussiness> _Bussiness;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserRoleChanging(string value);
    partial void OnUserRoleChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnActionTypeChanging(string value);
    partial void OnActionTypeChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public BussinessOrderLogs()
		{
			this._Bussiness = default(EntityRef<Bussiness>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Bussiness.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					this.OnUserRoleChanging(value);
					this.SendPropertyChanging();
					this._UserRole = value;
					this.SendPropertyChanged("UserRole");
					this.OnUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bussiness_BussinessOrderLogs", Storage="_Bussiness", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Bussiness Bussiness
		{
			get
			{
				return this._Bussiness.Entity;
			}
			set
			{
				Bussiness previousValue = this._Bussiness.Entity;
				if (((previousValue != value) 
							|| (this._Bussiness.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bussiness.Entity = null;
						previousValue.BussinessOrderLogs.Remove(this);
					}
					this._Bussiness.Entity = value;
					if ((value != null))
					{
						value.BussinessOrderLogs.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Bussiness");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BussinessPayment")]
	public partial class BussinessPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrderID;
		
		private string _PayNo;
		
		private string _PayType;
		
		private System.DateTime _PayDate;
		
		private double _PayAmount;
		
		private string _Zhuangtai;
		
		private EntityRef<Bussiness> _Bussiness;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnPayNoChanging(string value);
    partial void OnPayNoChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    partial void OnPayDateChanging(System.DateTime value);
    partial void OnPayDateChanged();
    partial void OnPayAmountChanging(double value);
    partial void OnPayAmountChanged();
    partial void OnZhuangtaiChanging(string value);
    partial void OnZhuangtaiChanged();
    #endregion
		
		public BussinessPayment()
		{
			this._Bussiness = default(EntityRef<Bussiness>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Bussiness.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayNo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PayNo
		{
			get
			{
				return this._PayNo;
			}
			set
			{
				if ((this._PayNo != value))
				{
					this.OnPayNoChanging(value);
					this.SendPropertyChanging();
					this._PayNo = value;
					this.SendPropertyChanged("PayNo");
					this.OnPayNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="Date NOT NULL")]
		public System.DateTime PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayAmount", DbType="Float NOT NULL")]
		public double PayAmount
		{
			get
			{
				return this._PayAmount;
			}
			set
			{
				if ((this._PayAmount != value))
				{
					this.OnPayAmountChanging(value);
					this.SendPropertyChanging();
					this._PayAmount = value;
					this.SendPropertyChanged("PayAmount");
					this.OnPayAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhuangtai", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Zhuangtai
		{
			get
			{
				return this._Zhuangtai;
			}
			set
			{
				if ((this._Zhuangtai != value))
				{
					this.OnZhuangtaiChanging(value);
					this.SendPropertyChanging();
					this._Zhuangtai = value;
					this.SendPropertyChanged("Zhuangtai");
					this.OnZhuangtaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bussiness_BussinessPayment", Storage="_Bussiness", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public Bussiness Bussiness
		{
			get
			{
				return this._Bussiness.Entity;
			}
			set
			{
				Bussiness previousValue = this._Bussiness.Entity;
				if (((previousValue != value) 
							|| (this._Bussiness.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bussiness.Entity = null;
						previousValue.BussinessPayment.Remove(this);
					}
					this._Bussiness.Entity = value;
					if ((value != null))
					{
						value.BussinessPayment.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Bussiness");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bussiness")]
	public partial class Bussiness : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MainID;
		
		private string _Zhuangtai;
		
		private string _HetongID;
		
		private System.DateTime _HetongDate;
		
		private string _Company;
		
		private string _Qudaobeizhu;
		
		private string _Lianxiren1;
		
		private string _Lianxiren1_Zuoji;
		
		private string _Lianxiren1_Shouji;
		
		private string _Lianxiren2;
		
		private string _Lianxiren2_Zuoji;
		
		private string _Lianxiren2_Shouji;
		
		private string _EventVenue;
		
		private string _Sales;
		
		private string _EventName;
		
		private System.DateTime _EventDate;
		
		private string _EventType;
		
		private double _Dabaodanjia;
		
		private int _Dabaodanjia_ren;
		
		private string _Otherfee1;
		
		private System.Nullable<double> _Otherfee1_Amount;
		
		private string _Otherfee2;
		
		private System.Nullable<double> _Otherfee2_Amount;
		
		private string _Otherfee3;
		
		private System.Nullable<double> _Otherfee3_Amount;
		
		private double _Zhekou;
		
		private double _Fanyong;
		
		private bool _IsChengdan;
		
		private EntitySet<BussinessEventFormat> _BussinessEventFormat;
		
		private EntitySet<BussinessAuditRecords> _BussinessAuditRecords;
		
		private EntitySet<BussinessOrderLogs> _BussinessOrderLogs;
		
		private EntitySet<BussinessPayment> _BussinessPayment;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMainIDChanging(int value);
    partial void OnMainIDChanged();
    partial void OnZhuangtaiChanging(string value);
    partial void OnZhuangtaiChanged();
    partial void OnHetongIDChanging(string value);
    partial void OnHetongIDChanged();
    partial void OnHetongDateChanging(System.DateTime value);
    partial void OnHetongDateChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnQudaobeizhuChanging(string value);
    partial void OnQudaobeizhuChanged();
    partial void OnLianxiren1Changing(string value);
    partial void OnLianxiren1Changed();
    partial void OnLianxiren1_ZuojiChanging(string value);
    partial void OnLianxiren1_ZuojiChanged();
    partial void OnLianxiren1_ShoujiChanging(string value);
    partial void OnLianxiren1_ShoujiChanged();
    partial void OnLianxiren2Changing(string value);
    partial void OnLianxiren2Changed();
    partial void OnLianxiren2_ZuojiChanging(string value);
    partial void OnLianxiren2_ZuojiChanged();
    partial void OnLianxiren2_ShoujiChanging(string value);
    partial void OnLianxiren2_ShoujiChanged();
    partial void OnEventVenueChanging(string value);
    partial void OnEventVenueChanged();
    partial void OnSalesChanging(string value);
    partial void OnSalesChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnDabaodanjiaChanging(double value);
    partial void OnDabaodanjiaChanged();
    partial void OnDabaodanjia_renChanging(int value);
    partial void OnDabaodanjia_renChanged();
    partial void OnOtherfee1Changing(string value);
    partial void OnOtherfee1Changed();
    partial void OnOtherfee1_AmountChanging(System.Nullable<double> value);
    partial void OnOtherfee1_AmountChanged();
    partial void OnOtherfee2Changing(string value);
    partial void OnOtherfee2Changed();
    partial void OnOtherfee2_AmountChanging(System.Nullable<double> value);
    partial void OnOtherfee2_AmountChanged();
    partial void OnOtherfee3Changing(string value);
    partial void OnOtherfee3Changed();
    partial void OnOtherfee3_AmountChanging(System.Nullable<double> value);
    partial void OnOtherfee3_AmountChanged();
    partial void OnZhekouChanging(double value);
    partial void OnZhekouChanged();
    partial void OnFanyongChanging(double value);
    partial void OnFanyongChanged();
    partial void OnIsChengdanChanging(bool value);
    partial void OnIsChengdanChanged();
    #endregion
		
		public Bussiness()
		{
			this._BussinessEventFormat = new EntitySet<BussinessEventFormat>(new Action<BussinessEventFormat>(this.attach_BussinessEventFormat), new Action<BussinessEventFormat>(this.detach_BussinessEventFormat));
			this._BussinessAuditRecords = new EntitySet<BussinessAuditRecords>(new Action<BussinessAuditRecords>(this.attach_BussinessAuditRecords), new Action<BussinessAuditRecords>(this.detach_BussinessAuditRecords));
			this._BussinessOrderLogs = new EntitySet<BussinessOrderLogs>(new Action<BussinessOrderLogs>(this.attach_BussinessOrderLogs), new Action<BussinessOrderLogs>(this.detach_BussinessOrderLogs));
			this._BussinessPayment = new EntitySet<BussinessPayment>(new Action<BussinessPayment>(this.attach_BussinessPayment), new Action<BussinessPayment>(this.detach_BussinessPayment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="Int NOT NULL")]
		public int MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhuangtai", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Zhuangtai
		{
			get
			{
				return this._Zhuangtai;
			}
			set
			{
				if ((this._Zhuangtai != value))
				{
					this.OnZhuangtaiChanging(value);
					this.SendPropertyChanging();
					this._Zhuangtai = value;
					this.SendPropertyChanged("Zhuangtai");
					this.OnZhuangtaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HetongID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HetongID
		{
			get
			{
				return this._HetongID;
			}
			set
			{
				if ((this._HetongID != value))
				{
					this.OnHetongIDChanging(value);
					this.SendPropertyChanging();
					this._HetongID = value;
					this.SendPropertyChanged("HetongID");
					this.OnHetongIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HetongDate", DbType="Date NOT NULL")]
		public System.DateTime HetongDate
		{
			get
			{
				return this._HetongDate;
			}
			set
			{
				if ((this._HetongDate != value))
				{
					this.OnHetongDateChanging(value);
					this.SendPropertyChanging();
					this._HetongDate = value;
					this.SendPropertyChanged("HetongDate");
					this.OnHetongDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qudaobeizhu", DbType="NVarChar(300)")]
		public string Qudaobeizhu
		{
			get
			{
				return this._Qudaobeizhu;
			}
			set
			{
				if ((this._Qudaobeizhu != value))
				{
					this.OnQudaobeizhuChanging(value);
					this.SendPropertyChanging();
					this._Qudaobeizhu = value;
					this.SendPropertyChanged("Qudaobeizhu");
					this.OnQudaobeizhuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lianxiren1", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Lianxiren1
		{
			get
			{
				return this._Lianxiren1;
			}
			set
			{
				if ((this._Lianxiren1 != value))
				{
					this.OnLianxiren1Changing(value);
					this.SendPropertyChanging();
					this._Lianxiren1 = value;
					this.SendPropertyChanged("Lianxiren1");
					this.OnLianxiren1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lianxiren1_Zuoji", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Lianxiren1_Zuoji
		{
			get
			{
				return this._Lianxiren1_Zuoji;
			}
			set
			{
				if ((this._Lianxiren1_Zuoji != value))
				{
					this.OnLianxiren1_ZuojiChanging(value);
					this.SendPropertyChanging();
					this._Lianxiren1_Zuoji = value;
					this.SendPropertyChanged("Lianxiren1_Zuoji");
					this.OnLianxiren1_ZuojiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lianxiren1_Shouji", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Lianxiren1_Shouji
		{
			get
			{
				return this._Lianxiren1_Shouji;
			}
			set
			{
				if ((this._Lianxiren1_Shouji != value))
				{
					this.OnLianxiren1_ShoujiChanging(value);
					this.SendPropertyChanging();
					this._Lianxiren1_Shouji = value;
					this.SendPropertyChanged("Lianxiren1_Shouji");
					this.OnLianxiren1_ShoujiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lianxiren2", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Lianxiren2
		{
			get
			{
				return this._Lianxiren2;
			}
			set
			{
				if ((this._Lianxiren2 != value))
				{
					this.OnLianxiren2Changing(value);
					this.SendPropertyChanging();
					this._Lianxiren2 = value;
					this.SendPropertyChanged("Lianxiren2");
					this.OnLianxiren2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lianxiren2_Zuoji", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Lianxiren2_Zuoji
		{
			get
			{
				return this._Lianxiren2_Zuoji;
			}
			set
			{
				if ((this._Lianxiren2_Zuoji != value))
				{
					this.OnLianxiren2_ZuojiChanging(value);
					this.SendPropertyChanging();
					this._Lianxiren2_Zuoji = value;
					this.SendPropertyChanged("Lianxiren2_Zuoji");
					this.OnLianxiren2_ZuojiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lianxiren2_Shouji", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Lianxiren2_Shouji
		{
			get
			{
				return this._Lianxiren2_Shouji;
			}
			set
			{
				if ((this._Lianxiren2_Shouji != value))
				{
					this.OnLianxiren2_ShoujiChanging(value);
					this.SendPropertyChanging();
					this._Lianxiren2_Shouji = value;
					this.SendPropertyChanged("Lianxiren2_Shouji");
					this.OnLianxiren2_ShoujiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventVenue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EventVenue
		{
			get
			{
				return this._EventVenue;
			}
			set
			{
				if ((this._EventVenue != value))
				{
					this.OnEventVenueChanging(value);
					this.SendPropertyChanging();
					this._EventVenue = value;
					this.SendPropertyChanged("EventVenue");
					this.OnEventVenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sales", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Sales
		{
			get
			{
				return this._Sales;
			}
			set
			{
				if ((this._Sales != value))
				{
					this.OnSalesChanging(value);
					this.SendPropertyChanging();
					this._Sales = value;
					this.SendPropertyChanged("Sales");
					this.OnSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dabaodanjia", DbType="Float NOT NULL")]
		public double Dabaodanjia
		{
			get
			{
				return this._Dabaodanjia;
			}
			set
			{
				if ((this._Dabaodanjia != value))
				{
					this.OnDabaodanjiaChanging(value);
					this.SendPropertyChanging();
					this._Dabaodanjia = value;
					this.SendPropertyChanged("Dabaodanjia");
					this.OnDabaodanjiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dabaodanjia_ren", DbType="Int NOT NULL")]
		public int Dabaodanjia_ren
		{
			get
			{
				return this._Dabaodanjia_ren;
			}
			set
			{
				if ((this._Dabaodanjia_ren != value))
				{
					this.OnDabaodanjia_renChanging(value);
					this.SendPropertyChanging();
					this._Dabaodanjia_ren = value;
					this.SendPropertyChanged("Dabaodanjia_ren");
					this.OnDabaodanjia_renChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otherfee1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Otherfee1
		{
			get
			{
				return this._Otherfee1;
			}
			set
			{
				if ((this._Otherfee1 != value))
				{
					this.OnOtherfee1Changing(value);
					this.SendPropertyChanging();
					this._Otherfee1 = value;
					this.SendPropertyChanged("Otherfee1");
					this.OnOtherfee1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otherfee1_Amount", DbType="Float")]
		public System.Nullable<double> Otherfee1_Amount
		{
			get
			{
				return this._Otherfee1_Amount;
			}
			set
			{
				if ((this._Otherfee1_Amount != value))
				{
					this.OnOtherfee1_AmountChanging(value);
					this.SendPropertyChanging();
					this._Otherfee1_Amount = value;
					this.SendPropertyChanged("Otherfee1_Amount");
					this.OnOtherfee1_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otherfee2", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Otherfee2
		{
			get
			{
				return this._Otherfee2;
			}
			set
			{
				if ((this._Otherfee2 != value))
				{
					this.OnOtherfee2Changing(value);
					this.SendPropertyChanging();
					this._Otherfee2 = value;
					this.SendPropertyChanged("Otherfee2");
					this.OnOtherfee2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otherfee2_Amount", DbType="Float")]
		public System.Nullable<double> Otherfee2_Amount
		{
			get
			{
				return this._Otherfee2_Amount;
			}
			set
			{
				if ((this._Otherfee2_Amount != value))
				{
					this.OnOtherfee2_AmountChanging(value);
					this.SendPropertyChanging();
					this._Otherfee2_Amount = value;
					this.SendPropertyChanged("Otherfee2_Amount");
					this.OnOtherfee2_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otherfee3", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Otherfee3
		{
			get
			{
				return this._Otherfee3;
			}
			set
			{
				if ((this._Otherfee3 != value))
				{
					this.OnOtherfee3Changing(value);
					this.SendPropertyChanging();
					this._Otherfee3 = value;
					this.SendPropertyChanged("Otherfee3");
					this.OnOtherfee3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otherfee3_Amount", DbType="Float")]
		public System.Nullable<double> Otherfee3_Amount
		{
			get
			{
				return this._Otherfee3_Amount;
			}
			set
			{
				if ((this._Otherfee3_Amount != value))
				{
					this.OnOtherfee3_AmountChanging(value);
					this.SendPropertyChanging();
					this._Otherfee3_Amount = value;
					this.SendPropertyChanged("Otherfee3_Amount");
					this.OnOtherfee3_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhekou", DbType="Float NOT NULL")]
		public double Zhekou
		{
			get
			{
				return this._Zhekou;
			}
			set
			{
				if ((this._Zhekou != value))
				{
					this.OnZhekouChanging(value);
					this.SendPropertyChanging();
					this._Zhekou = value;
					this.SendPropertyChanged("Zhekou");
					this.OnZhekouChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fanyong", DbType="Float NOT NULL")]
		public double Fanyong
		{
			get
			{
				return this._Fanyong;
			}
			set
			{
				if ((this._Fanyong != value))
				{
					this.OnFanyongChanging(value);
					this.SendPropertyChanging();
					this._Fanyong = value;
					this.SendPropertyChanged("Fanyong");
					this.OnFanyongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChengdan", DbType="Bit NOT NULL")]
		public bool IsChengdan
		{
			get
			{
				return this._IsChengdan;
			}
			set
			{
				if ((this._IsChengdan != value))
				{
					this.OnIsChengdanChanging(value);
					this.SendPropertyChanging();
					this._IsChengdan = value;
					this.SendPropertyChanged("IsChengdan");
					this.OnIsChengdanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bussiness_BussinessEventFormat", Storage="_BussinessEventFormat", ThisKey="ID", OtherKey="MainID")]
		public EntitySet<BussinessEventFormat> BussinessEventFormat
		{
			get
			{
				return this._BussinessEventFormat;
			}
			set
			{
				this._BussinessEventFormat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bussiness_BussinessAuditRecords", Storage="_BussinessAuditRecords", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<BussinessAuditRecords> BussinessAuditRecords
		{
			get
			{
				return this._BussinessAuditRecords;
			}
			set
			{
				this._BussinessAuditRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bussiness_BussinessOrderLogs", Storage="_BussinessOrderLogs", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<BussinessOrderLogs> BussinessOrderLogs
		{
			get
			{
				return this._BussinessOrderLogs;
			}
			set
			{
				this._BussinessOrderLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bussiness_BussinessPayment", Storage="_BussinessPayment", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<BussinessPayment> BussinessPayment
		{
			get
			{
				return this._BussinessPayment;
			}
			set
			{
				this._BussinessPayment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BussinessEventFormat(BussinessEventFormat entity)
		{
			this.SendPropertyChanging();
			entity.Bussiness = this;
		}
		
		private void detach_BussinessEventFormat(BussinessEventFormat entity)
		{
			this.SendPropertyChanging();
			entity.Bussiness = null;
		}
		
		private void attach_BussinessAuditRecords(BussinessAuditRecords entity)
		{
			this.SendPropertyChanging();
			entity.Bussiness = this;
		}
		
		private void detach_BussinessAuditRecords(BussinessAuditRecords entity)
		{
			this.SendPropertyChanging();
			entity.Bussiness = null;
		}
		
		private void attach_BussinessOrderLogs(BussinessOrderLogs entity)
		{
			this.SendPropertyChanging();
			entity.Bussiness = this;
		}
		
		private void detach_BussinessOrderLogs(BussinessOrderLogs entity)
		{
			this.SendPropertyChanging();
			entity.Bussiness = null;
		}
		
		private void attach_BussinessPayment(BussinessPayment entity)
		{
			this.SendPropertyChanging();
			entity.Bussiness = this;
		}
		
		private void detach_BussinessPayment(BussinessPayment entity)
		{
			this.SendPropertyChanging();
			entity.Bussiness = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BussinessAdditionalForSW")]
	public partial class BussinessAdditionalForSW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Hangye;
		
		private string _Lianxiren1;
		
		private string _Zuoji1;
		
		private string _Shouji1;
		
		private string _Youjian1;
		
		private string _Zhiwei1;
		
		private string _Lianxiren2;
		
		private string _Zuoji2;
		
		private string _Shouji2;
		
		private string _Youjian2;
		
		private string _Zhiwei2;
		
		private string _Dizhi;
		
		private int _BussinessID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHangyeChanging(string value);
    partial void OnHangyeChanged();
    partial void OnLianxiren1Changing(string value);
    partial void OnLianxiren1Changed();
    partial void OnZuoji1Changing(string value);
    partial void OnZuoji1Changed();
    partial void OnShouji1Changing(string value);
    partial void OnShouji1Changed();
    partial void OnYoujian1Changing(string value);
    partial void OnYoujian1Changed();
    partial void OnZhiwei1Changing(string value);
    partial void OnZhiwei1Changed();
    partial void OnLianxiren2Changing(string value);
    partial void OnLianxiren2Changed();
    partial void OnZuoji2Changing(string value);
    partial void OnZuoji2Changed();
    partial void OnShouji2Changing(string value);
    partial void OnShouji2Changed();
    partial void OnYoujian2Changing(string value);
    partial void OnYoujian2Changed();
    partial void OnZhiwei2Changing(string value);
    partial void OnZhiwei2Changed();
    partial void OnDizhiChanging(string value);
    partial void OnDizhiChanged();
    partial void OnBussinessIDChanging(int value);
    partial void OnBussinessIDChanged();
    #endregion
		
		public BussinessAdditionalForSW()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hangye", DbType="NVarChar(300)")]
		public string Hangye
		{
			get
			{
				return this._Hangye;
			}
			set
			{
				if ((this._Hangye != value))
				{
					this.OnHangyeChanging(value);
					this.SendPropertyChanging();
					this._Hangye = value;
					this.SendPropertyChanged("Hangye");
					this.OnHangyeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lianxiren1", DbType="NVarChar(300)")]
		public string Lianxiren1
		{
			get
			{
				return this._Lianxiren1;
			}
			set
			{
				if ((this._Lianxiren1 != value))
				{
					this.OnLianxiren1Changing(value);
					this.SendPropertyChanging();
					this._Lianxiren1 = value;
					this.SendPropertyChanged("Lianxiren1");
					this.OnLianxiren1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zuoji1", DbType="NVarChar(300)")]
		public string Zuoji1
		{
			get
			{
				return this._Zuoji1;
			}
			set
			{
				if ((this._Zuoji1 != value))
				{
					this.OnZuoji1Changing(value);
					this.SendPropertyChanging();
					this._Zuoji1 = value;
					this.SendPropertyChanged("Zuoji1");
					this.OnZuoji1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shouji1", DbType="NVarChar(300)")]
		public string Shouji1
		{
			get
			{
				return this._Shouji1;
			}
			set
			{
				if ((this._Shouji1 != value))
				{
					this.OnShouji1Changing(value);
					this.SendPropertyChanging();
					this._Shouji1 = value;
					this.SendPropertyChanged("Shouji1");
					this.OnShouji1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Youjian1", DbType="NVarChar(300)")]
		public string Youjian1
		{
			get
			{
				return this._Youjian1;
			}
			set
			{
				if ((this._Youjian1 != value))
				{
					this.OnYoujian1Changing(value);
					this.SendPropertyChanging();
					this._Youjian1 = value;
					this.SendPropertyChanged("Youjian1");
					this.OnYoujian1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhiwei1", DbType="NVarChar(300)")]
		public string Zhiwei1
		{
			get
			{
				return this._Zhiwei1;
			}
			set
			{
				if ((this._Zhiwei1 != value))
				{
					this.OnZhiwei1Changing(value);
					this.SendPropertyChanging();
					this._Zhiwei1 = value;
					this.SendPropertyChanged("Zhiwei1");
					this.OnZhiwei1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lianxiren2", DbType="NVarChar(300)")]
		public string Lianxiren2
		{
			get
			{
				return this._Lianxiren2;
			}
			set
			{
				if ((this._Lianxiren2 != value))
				{
					this.OnLianxiren2Changing(value);
					this.SendPropertyChanging();
					this._Lianxiren2 = value;
					this.SendPropertyChanged("Lianxiren2");
					this.OnLianxiren2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zuoji2", DbType="NVarChar(300)")]
		public string Zuoji2
		{
			get
			{
				return this._Zuoji2;
			}
			set
			{
				if ((this._Zuoji2 != value))
				{
					this.OnZuoji2Changing(value);
					this.SendPropertyChanging();
					this._Zuoji2 = value;
					this.SendPropertyChanged("Zuoji2");
					this.OnZuoji2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shouji2", DbType="NVarChar(300)")]
		public string Shouji2
		{
			get
			{
				return this._Shouji2;
			}
			set
			{
				if ((this._Shouji2 != value))
				{
					this.OnShouji2Changing(value);
					this.SendPropertyChanging();
					this._Shouji2 = value;
					this.SendPropertyChanged("Shouji2");
					this.OnShouji2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Youjian2", DbType="NVarChar(300)")]
		public string Youjian2
		{
			get
			{
				return this._Youjian2;
			}
			set
			{
				if ((this._Youjian2 != value))
				{
					this.OnYoujian2Changing(value);
					this.SendPropertyChanging();
					this._Youjian2 = value;
					this.SendPropertyChanged("Youjian2");
					this.OnYoujian2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhiwei2", DbType="NVarChar(300)")]
		public string Zhiwei2
		{
			get
			{
				return this._Zhiwei2;
			}
			set
			{
				if ((this._Zhiwei2 != value))
				{
					this.OnZhiwei2Changing(value);
					this.SendPropertyChanging();
					this._Zhiwei2 = value;
					this.SendPropertyChanged("Zhiwei2");
					this.OnZhiwei2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dizhi", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Dizhi
		{
			get
			{
				return this._Dizhi;
			}
			set
			{
				if ((this._Dizhi != value))
				{
					this.OnDizhiChanging(value);
					this.SendPropertyChanging();
					this._Dizhi = value;
					this.SendPropertyChanged("Dizhi");
					this.OnDizhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BussinessID", DbType="Int NOT NULL")]
		public int BussinessID
		{
			get
			{
				return this._BussinessID;
			}
			set
			{
				if ((this._BussinessID != value))
				{
					this.OnBussinessIDChanging(value);
					this.SendPropertyChanging();
					this._BussinessID = value;
					this.SendPropertyChanged("BussinessID");
					this.OnBussinessIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BussinessFiles")]
	public partial class BussinessFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BussinessID;
		
		private string _FileName;
		
		private string _FilePath;
		
		private System.DateTime _CreatedDt;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBussinessIDChanging(int value);
    partial void OnBussinessIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnCreatedDtChanging(System.DateTime value);
    partial void OnCreatedDtChanged();
    #endregion
		
		public BussinessFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BussinessID", DbType="Int NOT NULL")]
		public int BussinessID
		{
			get
			{
				return this._BussinessID;
			}
			set
			{
				if ((this._BussinessID != value))
				{
					this.OnBussinessIDChanging(value);
					this.SendPropertyChanging();
					this._BussinessID = value;
					this.SendPropertyChanged("BussinessID");
					this.OnBussinessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDt
		{
			get
			{
				return this._CreatedDt;
			}
			set
			{
				if ((this._CreatedDt != value))
				{
					this.OnCreatedDtChanging(value);
					this.SendPropertyChanging();
					this._CreatedDt = value;
					this.SendPropertyChanged("CreatedDt");
					this.OnCreatedDtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeddingFiles")]
	public partial class WeddingFiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _WeddingID;
		
		private string _FileName;
		
		private string _FilePath;
		
		private System.DateTime _CreatedDt;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWeddingIDChanging(int value);
    partial void OnWeddingIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnCreatedDtChanging(System.DateTime value);
    partial void OnCreatedDtChanged();
    #endregion
		
		public WeddingFiles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeddingID", DbType="Int NOT NULL")]
		public int WeddingID
		{
			get
			{
				return this._WeddingID;
			}
			set
			{
				if ((this._WeddingID != value))
				{
					this.OnWeddingIDChanging(value);
					this.SendPropertyChanging();
					this._WeddingID = value;
					this.SendPropertyChanged("WeddingID");
					this.OnWeddingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDt
		{
			get
			{
				return this._CreatedDt;
			}
			set
			{
				if ((this._CreatedDt != value))
				{
					this.OnCreatedDtChanging(value);
					this.SendPropertyChanging();
					this._CreatedDt = value;
					this.SendPropertyChanged("CreatedDt");
					this.OnCreatedDtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeddingOrders")]
	public partial class WeddingOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MainID;
		
		private string _Zhuangtai;
		
		private string _HunliDidian;
		
		private string _Sales;
		
		private string _HetongID;
		
		private System.DateTime _HetongDate;
		
		private System.Nullable<System.DateTime> _HunliDate;
		
		private string _XinlangName;
		
		private string _XinLangMB;
		
		private string _XinNiangName;
		
		private string _XinNiangMB;
		
		private string _YishiChangdi;
		
		private string _Yanhuiting;
		
		private string _WuWanyan;
		
		private string _HunyanTaocan;
		
		private double _CaijinDanjia;
		
		private string _CaijinZhuoshu;
		
		private string _CaijinZhekou;
		
		private string _JiushuiDanjia;
		
		private string _JiushuiZhuoshu;
		
		private string _JiushuiZhekou;
		
		private string _HunqinTaocan;
		
		private string _Hunqin;
		
		private string _Zhuohua;
		
		private string _Qita;
		
		private System.DateTime _DingjinDate;
		
		private double _DingjinPercentHunyan;
		
		private System.Nullable<double> _DingjinAmountHunyan;
		
		private double _DingjinPercentHunqin;
		
		private System.Nullable<double> _DingjinAmoutHunqin;
		
		private System.DateTime _ZhongkuanDate;
		
		private double _ZhongkuanPercentHunyan;
		
		private System.Nullable<double> _ZhongkuanAmountHunyan;
		
		private double _ZhongkuanPercentHunqin;
		
		private System.Nullable<double> _ZhongkuanAmountHunqin;
		
		private System.DateTime _WeikuanDate;
		
		private double _WeikuanPercentHunyan;
		
		private System.Nullable<double> _WeikuanAmountHunyan;
		
		private double _WeikuanPercentHunqin;
		
		private System.Nullable<double> _WeikuanAmountHunqin;
		
		private string _HunQinServices;
		
		private string _HunYanServices;
		
		private string _BuchongXinxi;
		
		private string _HunyanZongJine;
		
		private System.Nullable<int> _tempid;
		
		private string _paymentid;
		
		private EntitySet<AuditRecords> _AuditRecords;
		
		private EntitySet<WeddingExtraPayContent> _WeddingExtraPayContent;
		
		private EntitySet<WeddingOrdersLogs> _WeddingOrdersLogs;
		
		private EntitySet<WeddingPayment> _WeddingPayment;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMainIDChanging(int value);
    partial void OnMainIDChanged();
    partial void OnZhuangtaiChanging(string value);
    partial void OnZhuangtaiChanged();
    partial void OnHunliDidianChanging(string value);
    partial void OnHunliDidianChanged();
    partial void OnSalesChanging(string value);
    partial void OnSalesChanged();
    partial void OnHetongIDChanging(string value);
    partial void OnHetongIDChanged();
    partial void OnHetongDateChanging(System.DateTime value);
    partial void OnHetongDateChanged();
    partial void OnHunliDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHunliDateChanged();
    partial void OnXinlangNameChanging(string value);
    partial void OnXinlangNameChanged();
    partial void OnXinLangMBChanging(string value);
    partial void OnXinLangMBChanged();
    partial void OnXinNiangNameChanging(string value);
    partial void OnXinNiangNameChanged();
    partial void OnXinNiangMBChanging(string value);
    partial void OnXinNiangMBChanged();
    partial void OnYishiChangdiChanging(string value);
    partial void OnYishiChangdiChanged();
    partial void OnYanhuitingChanging(string value);
    partial void OnYanhuitingChanged();
    partial void OnWuWanyanChanging(string value);
    partial void OnWuWanyanChanged();
    partial void OnHunyanTaocanChanging(string value);
    partial void OnHunyanTaocanChanged();
    partial void OnCaijinDanjiaChanging(double value);
    partial void OnCaijinDanjiaChanged();
    partial void OnCaijinZhuoshuChanging(string value);
    partial void OnCaijinZhuoshuChanged();
    partial void OnCaijinZhekouChanging(string value);
    partial void OnCaijinZhekouChanged();
    partial void OnJiushuiDanjiaChanging(string value);
    partial void OnJiushuiDanjiaChanged();
    partial void OnJiushuiZhuoshuChanging(string value);
    partial void OnJiushuiZhuoshuChanged();
    partial void OnJiushuiZhekouChanging(string value);
    partial void OnJiushuiZhekouChanged();
    partial void OnHunqinTaocanChanging(string value);
    partial void OnHunqinTaocanChanged();
    partial void OnHunqinChanging(string value);
    partial void OnHunqinChanged();
    partial void OnZhuohuaChanging(string value);
    partial void OnZhuohuaChanged();
    partial void OnQitaChanging(string value);
    partial void OnQitaChanged();
    partial void OnDingjinDateChanging(System.DateTime value);
    partial void OnDingjinDateChanged();
    partial void OnDingjinPercentHunyanChanging(double value);
    partial void OnDingjinPercentHunyanChanged();
    partial void OnDingjinAmountHunyanChanging(System.Nullable<double> value);
    partial void OnDingjinAmountHunyanChanged();
    partial void OnDingjinPercentHunqinChanging(double value);
    partial void OnDingjinPercentHunqinChanged();
    partial void OnDingjinAmoutHunqinChanging(System.Nullable<double> value);
    partial void OnDingjinAmoutHunqinChanged();
    partial void OnZhongkuanDateChanging(System.DateTime value);
    partial void OnZhongkuanDateChanged();
    partial void OnZhongkuanPercentHunyanChanging(double value);
    partial void OnZhongkuanPercentHunyanChanged();
    partial void OnZhongkuanAmountHunyanChanging(System.Nullable<double> value);
    partial void OnZhongkuanAmountHunyanChanged();
    partial void OnZhongkuanPercentHunqinChanging(double value);
    partial void OnZhongkuanPercentHunqinChanged();
    partial void OnZhongkuanAmountHunqinChanging(System.Nullable<double> value);
    partial void OnZhongkuanAmountHunqinChanged();
    partial void OnWeikuanDateChanging(System.DateTime value);
    partial void OnWeikuanDateChanged();
    partial void OnWeikuanPercentHunyanChanging(double value);
    partial void OnWeikuanPercentHunyanChanged();
    partial void OnWeikuanAmountHunyanChanging(System.Nullable<double> value);
    partial void OnWeikuanAmountHunyanChanged();
    partial void OnWeikuanPercentHunqinChanging(double value);
    partial void OnWeikuanPercentHunqinChanged();
    partial void OnWeikuanAmountHunqinChanging(System.Nullable<double> value);
    partial void OnWeikuanAmountHunqinChanged();
    partial void OnHunQinServicesChanging(string value);
    partial void OnHunQinServicesChanged();
    partial void OnHunYanServicesChanging(string value);
    partial void OnHunYanServicesChanged();
    partial void OnBuchongXinxiChanging(string value);
    partial void OnBuchongXinxiChanged();
    partial void OnHunyanZongJineChanging(string value);
    partial void OnHunyanZongJineChanged();
    partial void OntempidChanging(System.Nullable<int> value);
    partial void OntempidChanged();
    partial void OnpaymentidChanging(string value);
    partial void OnpaymentidChanged();
    #endregion
		
		public WeddingOrders()
		{
			this._AuditRecords = new EntitySet<AuditRecords>(new Action<AuditRecords>(this.attach_AuditRecords), new Action<AuditRecords>(this.detach_AuditRecords));
			this._WeddingExtraPayContent = new EntitySet<WeddingExtraPayContent>(new Action<WeddingExtraPayContent>(this.attach_WeddingExtraPayContent), new Action<WeddingExtraPayContent>(this.detach_WeddingExtraPayContent));
			this._WeddingOrdersLogs = new EntitySet<WeddingOrdersLogs>(new Action<WeddingOrdersLogs>(this.attach_WeddingOrdersLogs), new Action<WeddingOrdersLogs>(this.detach_WeddingOrdersLogs));
			this._WeddingPayment = new EntitySet<WeddingPayment>(new Action<WeddingPayment>(this.attach_WeddingPayment), new Action<WeddingPayment>(this.detach_WeddingPayment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainID", DbType="Int NOT NULL")]
		public int MainID
		{
			get
			{
				return this._MainID;
			}
			set
			{
				if ((this._MainID != value))
				{
					this.OnMainIDChanging(value);
					this.SendPropertyChanging();
					this._MainID = value;
					this.SendPropertyChanged("MainID");
					this.OnMainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhuangtai", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Zhuangtai
		{
			get
			{
				return this._Zhuangtai;
			}
			set
			{
				if ((this._Zhuangtai != value))
				{
					this.OnZhuangtaiChanging(value);
					this.SendPropertyChanging();
					this._Zhuangtai = value;
					this.SendPropertyChanged("Zhuangtai");
					this.OnZhuangtaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HunliDidian", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HunliDidian
		{
			get
			{
				return this._HunliDidian;
			}
			set
			{
				if ((this._HunliDidian != value))
				{
					this.OnHunliDidianChanging(value);
					this.SendPropertyChanging();
					this._HunliDidian = value;
					this.SendPropertyChanged("HunliDidian");
					this.OnHunliDidianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sales", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Sales
		{
			get
			{
				return this._Sales;
			}
			set
			{
				if ((this._Sales != value))
				{
					this.OnSalesChanging(value);
					this.SendPropertyChanging();
					this._Sales = value;
					this.SendPropertyChanged("Sales");
					this.OnSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HetongID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HetongID
		{
			get
			{
				return this._HetongID;
			}
			set
			{
				if ((this._HetongID != value))
				{
					this.OnHetongIDChanging(value);
					this.SendPropertyChanging();
					this._HetongID = value;
					this.SendPropertyChanged("HetongID");
					this.OnHetongIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HetongDate", DbType="Date NOT NULL")]
		public System.DateTime HetongDate
		{
			get
			{
				return this._HetongDate;
			}
			set
			{
				if ((this._HetongDate != value))
				{
					this.OnHetongDateChanging(value);
					this.SendPropertyChanging();
					this._HetongDate = value;
					this.SendPropertyChanged("HetongDate");
					this.OnHetongDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HunliDate", DbType="Date")]
		public System.Nullable<System.DateTime> HunliDate
		{
			get
			{
				return this._HunliDate;
			}
			set
			{
				if ((this._HunliDate != value))
				{
					this.OnHunliDateChanging(value);
					this.SendPropertyChanging();
					this._HunliDate = value;
					this.SendPropertyChanged("HunliDate");
					this.OnHunliDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XinlangName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string XinlangName
		{
			get
			{
				return this._XinlangName;
			}
			set
			{
				if ((this._XinlangName != value))
				{
					this.OnXinlangNameChanging(value);
					this.SendPropertyChanging();
					this._XinlangName = value;
					this.SendPropertyChanged("XinlangName");
					this.OnXinlangNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XinLangMB", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string XinLangMB
		{
			get
			{
				return this._XinLangMB;
			}
			set
			{
				if ((this._XinLangMB != value))
				{
					this.OnXinLangMBChanging(value);
					this.SendPropertyChanging();
					this._XinLangMB = value;
					this.SendPropertyChanged("XinLangMB");
					this.OnXinLangMBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XinNiangName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string XinNiangName
		{
			get
			{
				return this._XinNiangName;
			}
			set
			{
				if ((this._XinNiangName != value))
				{
					this.OnXinNiangNameChanging(value);
					this.SendPropertyChanging();
					this._XinNiangName = value;
					this.SendPropertyChanged("XinNiangName");
					this.OnXinNiangNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XinNiangMB", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string XinNiangMB
		{
			get
			{
				return this._XinNiangMB;
			}
			set
			{
				if ((this._XinNiangMB != value))
				{
					this.OnXinNiangMBChanging(value);
					this.SendPropertyChanging();
					this._XinNiangMB = value;
					this.SendPropertyChanged("XinNiangMB");
					this.OnXinNiangMBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YishiChangdi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string YishiChangdi
		{
			get
			{
				return this._YishiChangdi;
			}
			set
			{
				if ((this._YishiChangdi != value))
				{
					this.OnYishiChangdiChanging(value);
					this.SendPropertyChanging();
					this._YishiChangdi = value;
					this.SendPropertyChanged("YishiChangdi");
					this.OnYishiChangdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yanhuiting", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Yanhuiting
		{
			get
			{
				return this._Yanhuiting;
			}
			set
			{
				if ((this._Yanhuiting != value))
				{
					this.OnYanhuitingChanging(value);
					this.SendPropertyChanging();
					this._Yanhuiting = value;
					this.SendPropertyChanged("Yanhuiting");
					this.OnYanhuitingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WuWanyan", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string WuWanyan
		{
			get
			{
				return this._WuWanyan;
			}
			set
			{
				if ((this._WuWanyan != value))
				{
					this.OnWuWanyanChanging(value);
					this.SendPropertyChanging();
					this._WuWanyan = value;
					this.SendPropertyChanged("WuWanyan");
					this.OnWuWanyanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HunyanTaocan", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HunyanTaocan
		{
			get
			{
				return this._HunyanTaocan;
			}
			set
			{
				if ((this._HunyanTaocan != value))
				{
					this.OnHunyanTaocanChanging(value);
					this.SendPropertyChanging();
					this._HunyanTaocan = value;
					this.SendPropertyChanged("HunyanTaocan");
					this.OnHunyanTaocanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaijinDanjia", DbType="Float NOT NULL")]
		public double CaijinDanjia
		{
			get
			{
				return this._CaijinDanjia;
			}
			set
			{
				if ((this._CaijinDanjia != value))
				{
					this.OnCaijinDanjiaChanging(value);
					this.SendPropertyChanging();
					this._CaijinDanjia = value;
					this.SendPropertyChanged("CaijinDanjia");
					this.OnCaijinDanjiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaijinZhuoshu", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CaijinZhuoshu
		{
			get
			{
				return this._CaijinZhuoshu;
			}
			set
			{
				if ((this._CaijinZhuoshu != value))
				{
					this.OnCaijinZhuoshuChanging(value);
					this.SendPropertyChanging();
					this._CaijinZhuoshu = value;
					this.SendPropertyChanged("CaijinZhuoshu");
					this.OnCaijinZhuoshuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaijinZhekou", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CaijinZhekou
		{
			get
			{
				return this._CaijinZhekou;
			}
			set
			{
				if ((this._CaijinZhekou != value))
				{
					this.OnCaijinZhekouChanging(value);
					this.SendPropertyChanging();
					this._CaijinZhekou = value;
					this.SendPropertyChanged("CaijinZhekou");
					this.OnCaijinZhekouChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JiushuiDanjia", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string JiushuiDanjia
		{
			get
			{
				return this._JiushuiDanjia;
			}
			set
			{
				if ((this._JiushuiDanjia != value))
				{
					this.OnJiushuiDanjiaChanging(value);
					this.SendPropertyChanging();
					this._JiushuiDanjia = value;
					this.SendPropertyChanged("JiushuiDanjia");
					this.OnJiushuiDanjiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JiushuiZhuoshu", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string JiushuiZhuoshu
		{
			get
			{
				return this._JiushuiZhuoshu;
			}
			set
			{
				if ((this._JiushuiZhuoshu != value))
				{
					this.OnJiushuiZhuoshuChanging(value);
					this.SendPropertyChanging();
					this._JiushuiZhuoshu = value;
					this.SendPropertyChanged("JiushuiZhuoshu");
					this.OnJiushuiZhuoshuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JiushuiZhekou", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string JiushuiZhekou
		{
			get
			{
				return this._JiushuiZhekou;
			}
			set
			{
				if ((this._JiushuiZhekou != value))
				{
					this.OnJiushuiZhekouChanging(value);
					this.SendPropertyChanging();
					this._JiushuiZhekou = value;
					this.SendPropertyChanged("JiushuiZhekou");
					this.OnJiushuiZhekouChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HunqinTaocan", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HunqinTaocan
		{
			get
			{
				return this._HunqinTaocan;
			}
			set
			{
				if ((this._HunqinTaocan != value))
				{
					this.OnHunqinTaocanChanging(value);
					this.SendPropertyChanging();
					this._HunqinTaocan = value;
					this.SendPropertyChanged("HunqinTaocan");
					this.OnHunqinTaocanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hunqin", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Hunqin
		{
			get
			{
				return this._Hunqin;
			}
			set
			{
				if ((this._Hunqin != value))
				{
					this.OnHunqinChanging(value);
					this.SendPropertyChanging();
					this._Hunqin = value;
					this.SendPropertyChanged("Hunqin");
					this.OnHunqinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhuohua", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Zhuohua
		{
			get
			{
				return this._Zhuohua;
			}
			set
			{
				if ((this._Zhuohua != value))
				{
					this.OnZhuohuaChanging(value);
					this.SendPropertyChanging();
					this._Zhuohua = value;
					this.SendPropertyChanged("Zhuohua");
					this.OnZhuohuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qita", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Qita
		{
			get
			{
				return this._Qita;
			}
			set
			{
				if ((this._Qita != value))
				{
					this.OnQitaChanging(value);
					this.SendPropertyChanging();
					this._Qita = value;
					this.SendPropertyChanged("Qita");
					this.OnQitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DingjinDate", DbType="Date NOT NULL")]
		public System.DateTime DingjinDate
		{
			get
			{
				return this._DingjinDate;
			}
			set
			{
				if ((this._DingjinDate != value))
				{
					this.OnDingjinDateChanging(value);
					this.SendPropertyChanging();
					this._DingjinDate = value;
					this.SendPropertyChanged("DingjinDate");
					this.OnDingjinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DingjinPercentHunyan", DbType="Float NOT NULL")]
		public double DingjinPercentHunyan
		{
			get
			{
				return this._DingjinPercentHunyan;
			}
			set
			{
				if ((this._DingjinPercentHunyan != value))
				{
					this.OnDingjinPercentHunyanChanging(value);
					this.SendPropertyChanging();
					this._DingjinPercentHunyan = value;
					this.SendPropertyChanged("DingjinPercentHunyan");
					this.OnDingjinPercentHunyanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DingjinAmountHunyan", DbType="Float")]
		public System.Nullable<double> DingjinAmountHunyan
		{
			get
			{
				return this._DingjinAmountHunyan;
			}
			set
			{
				if ((this._DingjinAmountHunyan != value))
				{
					this.OnDingjinAmountHunyanChanging(value);
					this.SendPropertyChanging();
					this._DingjinAmountHunyan = value;
					this.SendPropertyChanged("DingjinAmountHunyan");
					this.OnDingjinAmountHunyanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DingjinPercentHunqin", DbType="Float NOT NULL")]
		public double DingjinPercentHunqin
		{
			get
			{
				return this._DingjinPercentHunqin;
			}
			set
			{
				if ((this._DingjinPercentHunqin != value))
				{
					this.OnDingjinPercentHunqinChanging(value);
					this.SendPropertyChanging();
					this._DingjinPercentHunqin = value;
					this.SendPropertyChanged("DingjinPercentHunqin");
					this.OnDingjinPercentHunqinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DingjinAmoutHunqin", DbType="Float")]
		public System.Nullable<double> DingjinAmoutHunqin
		{
			get
			{
				return this._DingjinAmoutHunqin;
			}
			set
			{
				if ((this._DingjinAmoutHunqin != value))
				{
					this.OnDingjinAmoutHunqinChanging(value);
					this.SendPropertyChanging();
					this._DingjinAmoutHunqin = value;
					this.SendPropertyChanged("DingjinAmoutHunqin");
					this.OnDingjinAmoutHunqinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZhongkuanDate", DbType="Date NOT NULL")]
		public System.DateTime ZhongkuanDate
		{
			get
			{
				return this._ZhongkuanDate;
			}
			set
			{
				if ((this._ZhongkuanDate != value))
				{
					this.OnZhongkuanDateChanging(value);
					this.SendPropertyChanging();
					this._ZhongkuanDate = value;
					this.SendPropertyChanged("ZhongkuanDate");
					this.OnZhongkuanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZhongkuanPercentHunyan", DbType="Float NOT NULL")]
		public double ZhongkuanPercentHunyan
		{
			get
			{
				return this._ZhongkuanPercentHunyan;
			}
			set
			{
				if ((this._ZhongkuanPercentHunyan != value))
				{
					this.OnZhongkuanPercentHunyanChanging(value);
					this.SendPropertyChanging();
					this._ZhongkuanPercentHunyan = value;
					this.SendPropertyChanged("ZhongkuanPercentHunyan");
					this.OnZhongkuanPercentHunyanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZhongkuanAmountHunyan", DbType="Float")]
		public System.Nullable<double> ZhongkuanAmountHunyan
		{
			get
			{
				return this._ZhongkuanAmountHunyan;
			}
			set
			{
				if ((this._ZhongkuanAmountHunyan != value))
				{
					this.OnZhongkuanAmountHunyanChanging(value);
					this.SendPropertyChanging();
					this._ZhongkuanAmountHunyan = value;
					this.SendPropertyChanged("ZhongkuanAmountHunyan");
					this.OnZhongkuanAmountHunyanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZhongkuanPercentHunqin", DbType="Float NOT NULL")]
		public double ZhongkuanPercentHunqin
		{
			get
			{
				return this._ZhongkuanPercentHunqin;
			}
			set
			{
				if ((this._ZhongkuanPercentHunqin != value))
				{
					this.OnZhongkuanPercentHunqinChanging(value);
					this.SendPropertyChanging();
					this._ZhongkuanPercentHunqin = value;
					this.SendPropertyChanged("ZhongkuanPercentHunqin");
					this.OnZhongkuanPercentHunqinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZhongkuanAmountHunqin", DbType="Float")]
		public System.Nullable<double> ZhongkuanAmountHunqin
		{
			get
			{
				return this._ZhongkuanAmountHunqin;
			}
			set
			{
				if ((this._ZhongkuanAmountHunqin != value))
				{
					this.OnZhongkuanAmountHunqinChanging(value);
					this.SendPropertyChanging();
					this._ZhongkuanAmountHunqin = value;
					this.SendPropertyChanged("ZhongkuanAmountHunqin");
					this.OnZhongkuanAmountHunqinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeikuanDate", DbType="Date NOT NULL")]
		public System.DateTime WeikuanDate
		{
			get
			{
				return this._WeikuanDate;
			}
			set
			{
				if ((this._WeikuanDate != value))
				{
					this.OnWeikuanDateChanging(value);
					this.SendPropertyChanging();
					this._WeikuanDate = value;
					this.SendPropertyChanged("WeikuanDate");
					this.OnWeikuanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeikuanPercentHunyan", DbType="Float NOT NULL")]
		public double WeikuanPercentHunyan
		{
			get
			{
				return this._WeikuanPercentHunyan;
			}
			set
			{
				if ((this._WeikuanPercentHunyan != value))
				{
					this.OnWeikuanPercentHunyanChanging(value);
					this.SendPropertyChanging();
					this._WeikuanPercentHunyan = value;
					this.SendPropertyChanged("WeikuanPercentHunyan");
					this.OnWeikuanPercentHunyanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeikuanAmountHunyan", DbType="Float")]
		public System.Nullable<double> WeikuanAmountHunyan
		{
			get
			{
				return this._WeikuanAmountHunyan;
			}
			set
			{
				if ((this._WeikuanAmountHunyan != value))
				{
					this.OnWeikuanAmountHunyanChanging(value);
					this.SendPropertyChanging();
					this._WeikuanAmountHunyan = value;
					this.SendPropertyChanged("WeikuanAmountHunyan");
					this.OnWeikuanAmountHunyanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeikuanPercentHunqin", DbType="Float NOT NULL")]
		public double WeikuanPercentHunqin
		{
			get
			{
				return this._WeikuanPercentHunqin;
			}
			set
			{
				if ((this._WeikuanPercentHunqin != value))
				{
					this.OnWeikuanPercentHunqinChanging(value);
					this.SendPropertyChanging();
					this._WeikuanPercentHunqin = value;
					this.SendPropertyChanged("WeikuanPercentHunqin");
					this.OnWeikuanPercentHunqinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeikuanAmountHunqin", DbType="Float")]
		public System.Nullable<double> WeikuanAmountHunqin
		{
			get
			{
				return this._WeikuanAmountHunqin;
			}
			set
			{
				if ((this._WeikuanAmountHunqin != value))
				{
					this.OnWeikuanAmountHunqinChanging(value);
					this.SendPropertyChanging();
					this._WeikuanAmountHunqin = value;
					this.SendPropertyChanged("WeikuanAmountHunqin");
					this.OnWeikuanAmountHunqinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HunQinServices", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HunQinServices
		{
			get
			{
				return this._HunQinServices;
			}
			set
			{
				if ((this._HunQinServices != value))
				{
					this.OnHunQinServicesChanging(value);
					this.SendPropertyChanging();
					this._HunQinServices = value;
					this.SendPropertyChanged("HunQinServices");
					this.OnHunQinServicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HunYanServices", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HunYanServices
		{
			get
			{
				return this._HunYanServices;
			}
			set
			{
				if ((this._HunYanServices != value))
				{
					this.OnHunYanServicesChanging(value);
					this.SendPropertyChanging();
					this._HunYanServices = value;
					this.SendPropertyChanged("HunYanServices");
					this.OnHunYanServicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchongXinxi", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BuchongXinxi
		{
			get
			{
				return this._BuchongXinxi;
			}
			set
			{
				if ((this._BuchongXinxi != value))
				{
					this.OnBuchongXinxiChanging(value);
					this.SendPropertyChanging();
					this._BuchongXinxi = value;
					this.SendPropertyChanged("BuchongXinxi");
					this.OnBuchongXinxiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HunyanZongJine", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string HunyanZongJine
		{
			get
			{
				return this._HunyanZongJine;
			}
			set
			{
				if ((this._HunyanZongJine != value))
				{
					this.OnHunyanZongJineChanging(value);
					this.SendPropertyChanging();
					this._HunyanZongJine = value;
					this.SendPropertyChanged("HunyanZongJine");
					this.OnHunyanZongJineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempid", DbType="Int")]
		public System.Nullable<int> tempid
		{
			get
			{
				return this._tempid;
			}
			set
			{
				if ((this._tempid != value))
				{
					this.OntempidChanging(value);
					this.SendPropertyChanging();
					this._tempid = value;
					this.SendPropertyChanged("tempid");
					this.OntempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentid", DbType="NVarChar(200)")]
		public string paymentid
		{
			get
			{
				return this._paymentid;
			}
			set
			{
				if ((this._paymentid != value))
				{
					this.OnpaymentidChanging(value);
					this.SendPropertyChanging();
					this._paymentid = value;
					this.SendPropertyChanged("paymentid");
					this.OnpaymentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeddingOrders_AuditRecords", Storage="_AuditRecords", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<AuditRecords> AuditRecords
		{
			get
			{
				return this._AuditRecords;
			}
			set
			{
				this._AuditRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeddingOrders_WeddingExtraPayContent", Storage="_WeddingExtraPayContent", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<WeddingExtraPayContent> WeddingExtraPayContent
		{
			get
			{
				return this._WeddingExtraPayContent;
			}
			set
			{
				this._WeddingExtraPayContent.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeddingOrders_WeddingOrdersLogs", Storage="_WeddingOrdersLogs", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<WeddingOrdersLogs> WeddingOrdersLogs
		{
			get
			{
				return this._WeddingOrdersLogs;
			}
			set
			{
				this._WeddingOrdersLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeddingOrders_WeddingPayment", Storage="_WeddingPayment", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<WeddingPayment> WeddingPayment
		{
			get
			{
				return this._WeddingPayment;
			}
			set
			{
				this._WeddingPayment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AuditRecords(AuditRecords entity)
		{
			this.SendPropertyChanging();
			entity.WeddingOrders = this;
		}
		
		private void detach_AuditRecords(AuditRecords entity)
		{
			this.SendPropertyChanging();
			entity.WeddingOrders = null;
		}
		
		private void attach_WeddingExtraPayContent(WeddingExtraPayContent entity)
		{
			this.SendPropertyChanging();
			entity.WeddingOrders = this;
		}
		
		private void detach_WeddingExtraPayContent(WeddingExtraPayContent entity)
		{
			this.SendPropertyChanging();
			entity.WeddingOrders = null;
		}
		
		private void attach_WeddingOrdersLogs(WeddingOrdersLogs entity)
		{
			this.SendPropertyChanging();
			entity.WeddingOrders = this;
		}
		
		private void detach_WeddingOrdersLogs(WeddingOrdersLogs entity)
		{
			this.SendPropertyChanging();
			entity.WeddingOrders = null;
		}
		
		private void attach_WeddingPayment(WeddingPayment entity)
		{
			this.SendPropertyChanging();
			entity.WeddingOrders = this;
		}
		
		private void detach_WeddingPayment(WeddingPayment entity)
		{
			this.SendPropertyChanging();
			entity.WeddingOrders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeddingPayment")]
	public partial class WeddingPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrderID;
		
		private string _PayType;
		
		private System.DateTime _PayDate;
		
		private double _ShishouHY;
		
		private double _ShishouHQ;
		
		private string _Zhuangtai;
		
		private string _PayOrderNumber;
		
		private EntityRef<WeddingOrders> _WeddingOrders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    partial void OnPayDateChanging(System.DateTime value);
    partial void OnPayDateChanged();
    partial void OnShishouHYChanging(double value);
    partial void OnShishouHYChanged();
    partial void OnShishouHQChanging(double value);
    partial void OnShishouHQChanged();
    partial void OnZhuangtaiChanging(string value);
    partial void OnZhuangtaiChanged();
    partial void OnPayOrderNumberChanging(string value);
    partial void OnPayOrderNumberChanged();
    #endregion
		
		public WeddingPayment()
		{
			this._WeddingOrders = default(EntityRef<WeddingOrders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._WeddingOrders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="Date NOT NULL")]
		public System.DateTime PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShishouHY", DbType="Float NOT NULL")]
		public double ShishouHY
		{
			get
			{
				return this._ShishouHY;
			}
			set
			{
				if ((this._ShishouHY != value))
				{
					this.OnShishouHYChanging(value);
					this.SendPropertyChanging();
					this._ShishouHY = value;
					this.SendPropertyChanged("ShishouHY");
					this.OnShishouHYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShishouHQ", DbType="Float NOT NULL")]
		public double ShishouHQ
		{
			get
			{
				return this._ShishouHQ;
			}
			set
			{
				if ((this._ShishouHQ != value))
				{
					this.OnShishouHQChanging(value);
					this.SendPropertyChanging();
					this._ShishouHQ = value;
					this.SendPropertyChanged("ShishouHQ");
					this.OnShishouHQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zhuangtai", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Zhuangtai
		{
			get
			{
				return this._Zhuangtai;
			}
			set
			{
				if ((this._Zhuangtai != value))
				{
					this.OnZhuangtaiChanging(value);
					this.SendPropertyChanging();
					this._Zhuangtai = value;
					this.SendPropertyChanged("Zhuangtai");
					this.OnZhuangtaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayOrderNumber", DbType="NVarChar(200)")]
		public string PayOrderNumber
		{
			get
			{
				return this._PayOrderNumber;
			}
			set
			{
				if ((this._PayOrderNumber != value))
				{
					this.OnPayOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._PayOrderNumber = value;
					this.SendPropertyChanged("PayOrderNumber");
					this.OnPayOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeddingOrders_WeddingPayment", Storage="_WeddingOrders", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true)]
		public WeddingOrders WeddingOrders
		{
			get
			{
				return this._WeddingOrders.Entity;
			}
			set
			{
				WeddingOrders previousValue = this._WeddingOrders.Entity;
				if (((previousValue != value) 
							|| (this._WeddingOrders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeddingOrders.Entity = null;
						previousValue.WeddingPayment.Remove(this);
					}
					this._WeddingOrders.Entity = value;
					if ((value != null))
					{
						value.WeddingPayment.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("WeddingOrders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
